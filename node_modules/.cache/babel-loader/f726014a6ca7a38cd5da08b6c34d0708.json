{"ast":null,"code":"var _jsxFileName = \"/Users/tungdo/pathfinder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Element extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.condition != prevProps.condition) {\n      var current_element = document.getElementById(this.props.id);\n\n      if (this.props.condition == \"default\") {\n        current_element.style.background = '#FFFFFF';\n      } else if (this.props.condition == \"block\") {\n        current_element.style.background = \"#000000\";\n      } else if (this.props.condition == \"considered\") {\n        current_element.style.background = \"#FFFF00\";\n      } else if (this.props.condition == \"endpoint\") {\n        current_element.style.background = \"#33FFFF\";\n      } else if (this.props.condition == \"chosen\") {\n        current_element.style.background = \"#00FF00\";\n      }\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.id,\n      condition: this.props.condition,\n      onClick: this.props.changecond,\n      children: [\" \", this.props.id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\n;\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.BFS = () => {\n      var start_node = this.state.endpoints[0];\n      var target_node = this.state.endpoints[1];\n      var graph = this.state.adjacency_list;\n      console.log(this.state.adjacency_list);\n      console.log(graph);\n      var queue = [start_node];\n      console.log(start_node);\n      console.log(queue);\n      var visited = {};\n      var new_queue = [];\n      var parents = {};\n      var output = [];\n\n      while (queue.length > 0 && !(target_node in visited)) {\n        new_queue = [];\n\n        for (let i = 0; i < queue.length; i++) {\n          console.log(queue[i]);\n          console.log(graph[queue[i]]);\n\n          for (let j = 0; j < graph[queue[i]].length; j++) {\n            if (!(graph[queue[i]][j] in visited)) {\n              parents[graph[queue[i]][j]] = queue[i];\n              new_queue.push(graph[queue[i]][j]);\n              visited[graph[queue[i]][j]] = true;\n            }\n          }\n        }\n\n        queue = new_queue;\n        setTimeout(function () {\n          for (let k = 0; k < queue.length; k++) {\n            this.changeTraverseCondition(queue[k], \"considered\");\n          }\n        }.bind(this), 500);\n      }\n\n      if (target_node in visited) {\n        var current_node = target_node;\n\n        while (output.includes(start_node) == false) {\n          output.push(current_node);\n          current_node = parents[current_node];\n          setTimeout(function () {\n            this.changeTraverseCondition(output[-1], \"chosen\");\n          }.bind(this), 500);\n        }\n      }\n\n      console.log(output);\n    };\n\n    this.state = {\n      adjacency_list: {},\n      endpoints: [],\n      conditions: {}\n    };\n    this.changeInitialCondition = this.changeInitialCondition.bind(this);\n    this.updateGraph = this.updateGraph.bind(this);\n    this.changeTraverseCondition = this.changeTraverseCondition.bind(this);\n\n    for (let i = 1; i <= 400; i++) {\n      this.state.conditions[i] = \"default\";\n    }\n\n    ;\n    /* TODO: initialize adjacency_list */\n\n    var new_adjacency_list = {};\n    var first_row = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    var last_row = [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399];\n    var first_col = [21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361];\n    var last_col = [40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380];\n\n    for (let i = 1; i <= 400; i++) {\n      if (i == 1) {\n        new_adjacency_list[1] = [2, 21, 22];\n      } else if (i == 20) {\n        new_adjacency_list[20] = [19, 39, 40];\n      } else if (i == 381) {\n        new_adjacency_list[381] = [361, 362, 382];\n      } else if (i == 400) {\n        new_adjacency_list[400] = [379, 380, 399];\n      } else if (first_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i + 20, i + 19, i + 21];\n      } else if (last_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 20, i - 19, i - 21];\n      } else if (first_col.includes(i)) {\n        new_adjacency_list[i] = [i - 20, i + 20, i + 1, i - 19, i + 21];\n      } else if (last_col.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i - 21, i + 20, i + 19, i - 20];\n      } else {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n      }\n    }\n\n    ; //this.state.adjacency_list = new_adjacency_list;\n\n    this.state.adjacency_list = new_adjacency_list;\n  }\n\n  changeInitialCondition(i) {\n    var new_conditions = this.state.conditions;\n    var new_endpoints = this.state.endpoints;\n    var new_adjacency_list = this.state.adjacency_list;\n\n    if (this.state.conditions[i] == \"default\") {\n      new_conditions[i] = \"endpoint\";\n      new_endpoints.push(i);\n    } else if (this.state.conditions[i] == \"endpoint\") {\n      new_conditions[i] = \"block\";\n      new_endpoints.splice(new_endpoints.indexOf(i), 1);\n      new_adjacency_list[i] = [];\n      var candidates = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n\n      for (var j = 0; j < candidates.length; j++) {\n        if (candidates[j] in new_adjacency_list) {\n          if (new_adjacency_list[candidates[j]].includes(i)) {\n            new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i), 1);\n          }\n        }\n      }\n    } else if (this.state.conditions[i] == \"block\") {\n      new_conditions[i] = \"default\";\n      new_adjacency_list = this.updateGraph(i);\n      console.log(new_conditions[i]);\n    }\n\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n    console.log(this.state.endpoints);\n  }\n\n  updateGraph(i) {\n    var new_adjacency_list = this.state.adjacency_list;\n    var first_row = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    var last_row = [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399];\n    var first_col = [21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361];\n    var last_col = [40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380];\n\n    if (i == 1) {\n      new_adjacency_list[1] = [2, 21, 22];\n    } else if (i == 20) {\n      new_adjacency_list[20] = [19, 39, 40];\n    } else if (i == 381) {\n      new_adjacency_list[381] = [361, 362, 382];\n    } else if (i == 400) {\n      new_adjacency_list[400] = [379, 380, 399];\n    } else if (first_row.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i + 1, i + 20, i + 19, i + 21];\n    } else if (last_row.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i + 1, i - 20, i - 19, i - 21];\n    } else if (first_col.includes(i)) {\n      new_adjacency_list[i] = [i - 20, i + 20, i + 1, i - 19, i + 21];\n    } else if (last_col.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i - 21, i + 20, i + 19, i - 20];\n    } else {\n      new_adjacency_list[i] = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n    }\n\n    for (let k = 0; k < new_adjacency_list[i].length; k++) {\n      var element_need_i = new_adjacency_list[i][k];\n      new_adjacency_list[element_need_i].push(i);\n    }\n\n    return new_adjacency_list;\n  }\n\n  changeTraverseCondition(i, new_status) {\n    var new_conditions = this.state.conditions;\n    var new_adjacency_list = this.state.adjacency_list;\n    var new_endpoints = this.state.endpoints;\n    new_conditions[i] = new_status;\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n  }\n\n  renderElement(i) {\n    return /*#__PURE__*/_jsxDEV(Element, {\n      id: i,\n      condition: this.state.conditions[i],\n      changecond: () => this.changeInitialCondition(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderElements(start) {\n    var elements = [];\n\n    for (let i = 20 * (start - 1) + 1; i <= 20 * start; i++) {\n      elements.push(this.renderElement(i));\n    }\n\n    return elements;\n  }\n\n  renderBoard() {\n    var board = [];\n\n    for (let i = 1; i <= 20; i++) {\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        style: {\n          margin: '0'\n        },\n        children: [\" \", this.renderElements(i), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 18\n      }, this));\n    }\n\n    return board;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderBoard(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.BFS,\n        children: \" Breadth First Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tungdo/pathfinder/src/App.js"],"names":["Component","Element","constructor","props","componentDidUpdate","prevProps","condition","current_element","document","getElementById","id","style","background","render","changecond","Graph","BFS","start_node","state","endpoints","target_node","graph","adjacency_list","console","log","queue","visited","new_queue","parents","output","length","i","j","push","setTimeout","k","changeTraverseCondition","bind","current_node","includes","conditions","changeInitialCondition","updateGraph","new_adjacency_list","first_row","last_row","first_col","last_col","new_conditions","new_endpoints","splice","indexOf","candidates","setState","element_need_i","new_status","renderElement","renderElements","start","elements","renderBoard","board","margin","App"],"mappings":";;AACA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKF,KAAL,CAAWG,SAAX,IAAwBD,SAAS,CAACC,SAAtC,EAAiD;AAC/C,UAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKN,KAAL,CAAWO,EAAnC,CAAtB;;AACA,UAAI,KAAKP,KAAL,CAAWG,SAAX,IAAwB,SAA5B,EAAuC;AACrCC,QAAAA,eAAe,CAACI,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACD,OAFD,MAGK,IAAI,KAAKT,KAAL,CAAWG,SAAX,IAAwB,OAA5B,EAAqC;AACxCC,QAAAA,eAAe,CAACI,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACD,OAFI,MAGA,IAAI,KAAKT,KAAL,CAAWG,SAAX,IAAwB,YAA5B,EAA0C;AAC7CC,QAAAA,eAAe,CAACI,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACD,OAFI,MAGA,IAAI,KAAKT,KAAL,CAAWG,SAAX,IAAwB,UAA5B,EAAwC;AAC3CC,QAAAA,eAAe,CAACI,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACD,OAFI,MAGA,IAAI,KAAKT,KAAL,CAAWG,SAAX,IAAwB,QAA5B,EAAsC;AACzCC,QAAAA,eAAe,CAACI,KAAhB,CAAsBC,UAAtB,GAAmC,SAAnC;AACD;AACF;;AAAA;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,EAAE,EAAI,KAAKV,KAAL,CAAWO,EAA5C;AAAgD,MAAA,SAAS,EAAI,KAAKP,KAAL,CAAWG,SAAxE;AAAmF,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWW,UAAzG;AAAA,sBAAuH,KAAKX,KAAL,CAAWO,EAAlI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA1B6B;;AA2B/B;;AAED,MAAMK,KAAN,SAAoBf,SAApB,CAA8B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0InBa,GA1ImB,GA0Ib,MAAM;AACV,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAjB;AACA,UAAIC,WAAW,GAAG,KAAKF,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAlB;AACA,UAAIE,KAAK,GAAG,KAAKH,KAAL,CAAWI,cAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWI,cAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,UAAII,KAAK,GAAG,CAACR,UAAD,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,aAAOJ,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoB,EAAEV,WAAW,IAAIM,OAAjB,CAA3B,EAAsD;AAClDC,QAAAA,SAAS,GAAG,EAAZ;;AACA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACK,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnCR,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACM,CAAD,CAAjB;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAjB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAL,CAAgBD,MAApC,EAA4CE,CAAC,EAA7C,EAAiD;AAC7C,gBAAI,EAAEX,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAL,CAAgBC,CAAhB,KAAsBN,OAAxB,CAAJ,EAAsC;AAClCE,cAAAA,OAAO,CAACP,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAL,CAAgBC,CAAhB,CAAD,CAAP,GAA8BP,KAAK,CAACM,CAAD,CAAnC;AACAJ,cAAAA,SAAS,CAACM,IAAV,CAAeZ,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAL,CAAgBC,CAAhB,CAAf;AACAN,cAAAA,OAAO,CAACL,KAAK,CAACI,KAAK,CAACM,CAAD,CAAN,CAAL,CAAgBC,CAAhB,CAAD,CAAP,GAA8B,IAA9B;AACH;AACJ;AACJ;;AACDP,QAAAA,KAAK,GAAGE,SAAR;AACAO,QAAAA,UAAU,CAAC,YAAW;AACpB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACK,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,iBAAKC,uBAAL,CAA6BX,KAAK,CAACU,CAAD,CAAlC,EAAuC,YAAvC;AACD;AACF,SAJU,CAITE,IAJS,CAIJ,IAJI,CAAD,EAII,GAJJ,CAAV;AAKH;;AACD,UAAIjB,WAAW,IAAIM,OAAnB,EAA4B;AACxB,YAAIY,YAAY,GAAGlB,WAAnB;;AACA,eAAOS,MAAM,CAACU,QAAP,CAAgBtB,UAAhB,KAA+B,KAAtC,EAA6C;AACzCY,UAAAA,MAAM,CAACI,IAAP,CAAYK,YAAZ;AACAA,UAAAA,YAAY,GAAGV,OAAO,CAACU,YAAD,CAAtB;AACAJ,UAAAA,UAAU,CAAC,YAAW;AACpB,iBAAKE,uBAAL,CAA6BP,MAAM,CAAC,CAAC,CAAF,CAAnC,EAAyC,QAAzC;AACD,WAFU,CAETQ,IAFS,CAEJ,IAFI,CAAD,EAEI,GAFJ,CAAV;AAGH;AACJ;;AACDd,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,KAtLkB;;AAEjB,SAAKX,KAAL,GAAa;AACXI,MAAAA,cAAc,EAAE,EADL;AAEXH,MAAAA,SAAS,EAAC,EAFC;AAGXqB,MAAAA,UAAU,EAAC;AAHA,KAAb;AAKA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BJ,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKD,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,WAAKb,KAAL,CAAWsB,UAAX,CAAsBT,CAAtB,IAA2B,SAA3B;AACD;;AAAA;AACD;;AACA,QAAIY,kBAAkB,GAAG,EAAzB;AACA,QAAIC,SAAS,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB,EAA0B,EAA1B,EAA6B,EAA7B,EAAgC,EAAhC,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,EAA4C,EAA5C,CAAhB;AACA,QAAIC,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,CAAf;AACA,QAAIC,SAAS,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,CAAhB;AACA,QAAIC,QAAQ,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,GAA1C,EAA8C,GAA9C,EAAkD,GAAlD,EAAsD,GAAtD,EAA0D,GAA1D,EAA8D,GAA9D,EAAkE,GAAlE,CAAf;;AACA,SAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,UAAIA,CAAC,IAAI,CAAT,EAAY;AACVY,QAAAA,kBAAkB,CAAC,CAAD,CAAlB,GAAwB,CAAC,CAAD,EAAG,EAAH,EAAO,EAAP,CAAxB;AACD,OAFD,MAGK,IAAIZ,CAAC,IAAI,EAAT,EAAa;AAChBY,QAAAA,kBAAkB,CAAC,EAAD,CAAlB,GAAyB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAzB;AACD,OAFI,MAGA,IAAIZ,CAAC,IAAI,GAAT,EAAc;AACjBY,QAAAA,kBAAkB,CAAC,GAAD,CAAlB,GAA0B,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAA1B;AACD,OAFI,MAGA,IAAIZ,CAAC,IAAI,GAAT,EAAc;AACjBY,QAAAA,kBAAkB,CAAC,GAAD,CAAlB,GAA0B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA1B;AACD,OAFI,MAGA,IAAIC,SAAS,CAACL,QAAV,CAAmBR,CAAnB,CAAJ,EAA2B;AAC9BY,QAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAC,EAAnB,EAAuBA,CAAC,GAAC,EAAzB,CAAxB;AACD,OAFI,MAGA,IAAIc,QAAQ,CAACN,QAAT,CAAkBR,CAAlB,CAAJ,EAA0B;AAC7BY,QAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAC,EAAnB,EAAuBA,CAAC,GAAC,EAAzB,CAAxB;AACD,OAFI,MAGA,IAAIe,SAAS,CAACP,QAAV,CAAmBR,CAAnB,CAAJ,EAA2B;AAC9BY,QAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,EAAH,EAAOA,CAAC,GAAC,EAAT,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,GAAC,EAApB,EAAwBA,CAAC,GAAC,EAA1B,CAAxB;AACD,OAFI,MAGA,IAAIgB,QAAQ,CAACR,QAAT,CAAkBR,CAAlB,CAAJ,EAA0B;AAC7BY,QAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,EAAR,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,GAAG,EAAxB,EAA4BA,CAAC,GAAE,EAA/B,CAAxB;AACD,OAFI,MAGA;AACHY,QAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAE,EAApB,EAAwBA,CAAC,GAAE,EAA3B,EAA+BA,CAAC,GAAE,EAAlC,EAAsCA,CAAC,GAAE,EAAzC,EAA6CA,CAAC,GAAC,EAA/C,CAAxB;AACD;AACF;;AAAA,KA/CgB,CAgDjB;;AACA,SAAKb,KAAL,CAAWI,cAAX,GAA4BqB,kBAA5B;AACD;;AAEDF,EAAAA,sBAAsB,CAACV,CAAD,EAAI;AACxB,QAAIiB,cAAc,GAAG,KAAK9B,KAAL,CAAWsB,UAAhC;AACA,QAAIS,aAAa,GAAG,KAAK/B,KAAL,CAAWC,SAA/B;AACA,QAAIwB,kBAAkB,GAAG,KAAKzB,KAAL,CAAWI,cAApC;;AACA,QAAI,KAAKJ,KAAL,CAAWsB,UAAX,CAAsBT,CAAtB,KAA4B,SAAhC,EAA2C;AACzCiB,MAAAA,cAAc,CAACjB,CAAD,CAAd,GAAoB,UAApB;AACAkB,MAAAA,aAAa,CAAChB,IAAd,CAAmBF,CAAnB;AACD,KAHD,MAIK,IAAI,KAAKb,KAAL,CAAWsB,UAAX,CAAsBT,CAAtB,KAA4B,UAAhC,EAA4C;AAC/CiB,MAAAA,cAAc,CAACjB,CAAD,CAAd,GAAoB,OAApB;AACAkB,MAAAA,aAAa,CAACC,MAAd,CAAqBD,aAAa,CAACE,OAAd,CAAsBpB,CAAtB,CAArB,EAA+C,CAA/C;AACAY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,EAAxB;AACA,UAAIqB,UAAU,GAAG,CAACrB,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAE,EAApB,EAAwBA,CAAC,GAAE,EAA3B,EAA+BA,CAAC,GAAE,EAAlC,EAAsCA,CAAC,GAAE,EAAzC,EAA6CA,CAAC,GAAC,EAA/C,CAAjB;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGoB,UAAU,CAACtB,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxC,YAAIoB,UAAU,CAACpB,CAAD,CAAV,IAAiBW,kBAArB,EAAyC;AACvC,cAAIA,kBAAkB,CAACS,UAAU,CAACpB,CAAD,CAAX,CAAlB,CAAkCO,QAAlC,CAA2CR,CAA3C,CAAJ,EAAmD;AACjDY,YAAAA,kBAAkB,CAACS,UAAU,CAACpB,CAAD,CAAX,CAAlB,CAAkCkB,MAAlC,CAAyCP,kBAAkB,CAACS,UAAU,CAACpB,CAAD,CAAX,CAAlB,CAAkCmB,OAAlC,CAA0CpB,CAA1C,CAAzC,EAAuF,CAAvF;AACD;AACF;AACF;AACF,KAZI,MAaA,IAAI,KAAKb,KAAL,CAAWsB,UAAX,CAAsBT,CAAtB,KAA4B,OAAhC,EAAyC;AAC5CiB,MAAAA,cAAc,CAACjB,CAAD,CAAd,GAAoB,SAApB;AACAY,MAAAA,kBAAkB,GAAG,KAAKD,WAAL,CAAiBX,CAAjB,CAArB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYwB,cAAc,CAACjB,CAAD,CAA1B;AACD;;AACD,SAAKsB,QAAL,CAAcnC,KAAK,KAAK;AACtBsB,MAAAA,UAAU,EAAEQ,cADU;AAEtB7B,MAAAA,SAAS,EAAE8B,aAFW;AAGtB3B,MAAAA,cAAc,EAAEqB;AAHM,KAAL,CAAnB;AAKApB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,SAAvB;AACD;;AAEDuB,EAAAA,WAAW,CAACX,CAAD,EAAI;AACb,QAAIY,kBAAkB,GAAG,KAAKzB,KAAL,CAAWI,cAApC;AACA,QAAIsB,SAAS,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB,EAA0B,EAA1B,EAA6B,EAA7B,EAAgC,EAAhC,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,EAA4C,EAA5C,CAAhB;AACA,QAAIC,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,CAAf;AACA,QAAIC,SAAS,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,CAAhB;AACA,QAAIC,QAAQ,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,GAA1C,EAA8C,GAA9C,EAAkD,GAAlD,EAAsD,GAAtD,EAA0D,GAA1D,EAA8D,GAA9D,EAAkE,GAAlE,CAAf;;AACA,QAAIhB,CAAC,IAAI,CAAT,EAAY;AACVY,MAAAA,kBAAkB,CAAC,CAAD,CAAlB,GAAwB,CAAC,CAAD,EAAG,EAAH,EAAO,EAAP,CAAxB;AACD,KAFD,MAGK,IAAIZ,CAAC,IAAI,EAAT,EAAa;AAChBY,MAAAA,kBAAkB,CAAC,EAAD,CAAlB,GAAyB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAzB;AACD,KAFI,MAGA,IAAIZ,CAAC,IAAI,GAAT,EAAc;AACjBY,MAAAA,kBAAkB,CAAC,GAAD,CAAlB,GAA0B,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAA1B;AACD,KAFI,MAGA,IAAIZ,CAAC,IAAI,GAAT,EAAc;AACjBY,MAAAA,kBAAkB,CAAC,GAAD,CAAlB,GAA0B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA1B;AACD,KAFI,MAGA,IAAIC,SAAS,CAACL,QAAV,CAAmBR,CAAnB,CAAJ,EAA2B;AAC9BY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAC,EAAnB,EAAuBA,CAAC,GAAC,EAAzB,CAAxB;AACD,KAFI,MAGA,IAAIc,QAAQ,CAACN,QAAT,CAAkBR,CAAlB,CAAJ,EAA0B;AAC7BY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAC,EAAnB,EAAuBA,CAAC,GAAC,EAAzB,CAAxB;AACD,KAFI,MAGA,IAAIe,SAAS,CAACP,QAAV,CAAmBR,CAAnB,CAAJ,EAA2B;AAC9BY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,EAAH,EAAOA,CAAC,GAAC,EAAT,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,GAAC,EAApB,EAAwBA,CAAC,GAAC,EAA1B,CAAxB;AACD,KAFI,MAGA,IAAIgB,QAAQ,CAACR,QAAT,CAAkBR,CAAlB,CAAJ,EAA0B;AAC7BY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,EAAR,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,GAAG,EAAxB,EAA4BA,CAAC,GAAE,EAA/B,CAAxB;AACD,KAFI,MAGA;AACHY,MAAAA,kBAAkB,CAACZ,CAAD,CAAlB,GAAwB,CAACA,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,EAAWA,CAAC,GAAC,EAAb,EAAiBA,CAAC,GAAE,EAApB,EAAwBA,CAAC,GAAE,EAA3B,EAA+BA,CAAC,GAAE,EAAlC,EAAsCA,CAAC,GAAE,EAAzC,EAA6CA,CAAC,GAAC,EAA/C,CAAxB;AACD;;AACD,SAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGQ,kBAAkB,CAACZ,CAAD,CAAlB,CAAsBD,MAAxC,EAAgDK,CAAC,EAAjD,EAAqD;AACnD,UAAImB,cAAc,GAAGX,kBAAkB,CAACZ,CAAD,CAAlB,CAAsBI,CAAtB,CAArB;AACAQ,MAAAA,kBAAkB,CAACW,cAAD,CAAlB,CAAmCrB,IAAnC,CAAwCF,CAAxC;AACD;;AACD,WAAOY,kBAAP;AACD;;AAEDP,EAAAA,uBAAuB,CAACL,CAAD,EAAIwB,UAAJ,EAAgB;AACrC,QAAIP,cAAc,GAAG,KAAK9B,KAAL,CAAWsB,UAAhC;AACA,QAAIG,kBAAkB,GAAG,KAAKzB,KAAL,CAAWI,cAApC;AACA,QAAI2B,aAAa,GAAG,KAAK/B,KAAL,CAAWC,SAA/B;AACA6B,IAAAA,cAAc,CAACjB,CAAD,CAAd,GAAoBwB,UAApB;AACA,SAAKF,QAAL,CAAcnC,KAAK,KAAK;AACtBsB,MAAAA,UAAU,EAAEQ,cADU;AAEtB7B,MAAAA,SAAS,EAAE8B,aAFW;AAGtB3B,MAAAA,cAAc,EAAEqB;AAHM,KAAL,CAAnB;AAKD;;AAgDDa,EAAAA,aAAa,CAACzB,CAAD,EAAI;AACf,wBAAO,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,CAAb;AAAgB,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWsB,UAAX,CAAsBT,CAAtB,CAA3B;AAAqD,MAAA,UAAU,EAAE,MAAM,KAAKU,sBAAL,CAA4BV,CAA5B;AAAvE;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED0B,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAI5B,CAAC,GAAG,MAAI2B,KAAK,GAAC,CAAV,IAAe,CAA5B,EAA+B3B,CAAC,IAAI,KAAG2B,KAAvC,EAA8C3B,CAAC,EAA/C,EAAmD;AACjD4B,MAAAA,QAAQ,CAAC1B,IAAT,CAAc,KAAKuB,aAAL,CAAmBzB,CAAnB,CAAd;AACD;;AACD,WAAO4B,QAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B8B,MAAAA,KAAK,CAAC5B,IAAN,eAAW;AAAK,QAAA,SAAS,EAAG,WAAjB;AAA6B,QAAA,KAAK,EAAG;AAAC6B,UAAAA,MAAM,EAAE;AAAT,SAArC;AAAA,wBAAsD,KAAKL,cAAL,CAAoB1B,CAApB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AACD,WAAO8B,KAAP;AACD;;AAEDhD,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACC,KAAK+C,WAAL,EADD,eAEA;AAAQ,QAAA,OAAO,EAAI,KAAK5C,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApN2B;;AAwN9B,SAAS+C,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\n\nclass Element extends Component { \n  constructor(props) {\n    super(props);\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.condition != prevProps.condition) { \n      var current_element = document.getElementById(this.props.id);\n      if (this.props.condition == \"default\") { \n        current_element.style.background = '#FFFFFF';\n      }\n      else if (this.props.condition == \"block\") { \n        current_element.style.background = \"#000000\";\n      }\n      else if (this.props.condition == \"considered\") { \n        current_element.style.background = \"#FFFF00\";\n      }\n      else if (this.props.condition == \"endpoint\") { \n        current_element.style.background = \"#33FFFF\";\n      }\n      else if (this.props.condition == \"chosen\") { \n        current_element.style.background = \"#00FF00\";\n      }\n    }; \n  };\n  render() { \n    return <button className=\"square\" id = {this.props.id} condition = {this.props.condition} onClick = {this.props.changecond}> {this.props.id} </button>;\n  };\n};\n\nclass Graph extends Component { \n  constructor(props) { \n    super(props); \n    this.state = { \n      adjacency_list: {},\n      endpoints:[], \n      conditions:{}, \n    };\n    this.changeInitialCondition = this.changeInitialCondition.bind(this)\n    this.updateGraph = this.updateGraph.bind(this)\n    this.changeTraverseCondition = this.changeTraverseCondition.bind(this)\n    for (let i = 1; i <= 400; i++) {\n      this.state.conditions[i] = \"default\"; \n    };\n    /* TODO: initialize adjacency_list */\n    var new_adjacency_list = {}\n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361]\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380]\n    for (let i = 1; i <= 400; i++) { \n      if (i == 1) { \n        new_adjacency_list[1] = [2,21, 22]\n      }\n      else if (i == 20) { \n        new_adjacency_list[20] = [19,39,40]\n      }\n      else if (i == 381) { \n        new_adjacency_list[381] = [361,362,382]\n      }\n      else if (i == 400) { \n        new_adjacency_list[400] = [379, 380, 399]\n      }\n      else if (first_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21]\n      }\n      else if (last_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21]\n      }\n      else if (first_col.includes(i)) { \n        new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21]\n      }\n      else if (last_col.includes(i)) { \n        new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20]\n      }\n      else { \n        new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      }\n    };\n    //this.state.adjacency_list = new_adjacency_list;\n    this.state.adjacency_list = new_adjacency_list\n  };\n\n  changeInitialCondition(i) { \n    var new_conditions = this.state.conditions;\n    var new_endpoints = this.state.endpoints;\n    var new_adjacency_list = this.state.adjacency_list; \n    if (this.state.conditions[i] == \"default\") { \n      new_conditions[i] = \"endpoint\"; \n      new_endpoints.push(i) \n    }\n    else if (this.state.conditions[i] == \"endpoint\") { \n      new_conditions[i] = \"block\"; \n      new_endpoints.splice(new_endpoints.indexOf(i), 1); \n      new_adjacency_list[i] = []\n      var candidates = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      for (var j=0; j < candidates.length; j++) { \n        if (candidates[j] in new_adjacency_list) { \n          if (new_adjacency_list[candidates[j]].includes(i)) { \n            new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i), 1); \n          }\n        }\n      }\n    }\n    else if (this.state.conditions[i] == \"block\") { \n      new_conditions[i] = \"default\"; \n      new_adjacency_list = this.updateGraph(i)\n      console.log(new_conditions[i]) \n    }\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n    console.log(this.state.endpoints)\n  }; \n\n  updateGraph(i) { \n    var new_adjacency_list = this.state.adjacency_list; \n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];\n    if (i == 1) { \n      new_adjacency_list[1] = [2,21, 22];\n    }\n    else if (i == 20) { \n      new_adjacency_list[20] = [19,39,40];\n    }\n    else if (i == 381) { \n      new_adjacency_list[381] = [361,362,382];\n    }\n    else if (i == 400) { \n      new_adjacency_list[400] = [379, 380, 399];\n    }\n    else if (first_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21];\n    }\n    else if (last_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21];\n    }\n    else if (first_col.includes(i)) { \n      new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21];\n    }\n    else if (last_col.includes(i)) { \n      new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20];\n    }\n    else { \n      new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21];\n    }\n    for (let k=0; k < new_adjacency_list[i].length; k++) { \n      var element_need_i = new_adjacency_list[i][k];\n      new_adjacency_list[element_need_i].push(i);\n    }\n    return new_adjacency_list; \n  };\n\n  changeTraverseCondition(i, new_status) { \n    var new_conditions = this.state.conditions; \n    var new_adjacency_list = this.state.adjacency_list; \n    var new_endpoints = this.state.endpoints\n    new_conditions[i] = new_status; \n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  BFS = () => { \n    var start_node = this.state.endpoints[0]\n    var target_node = this.state.endpoints[1]\n    var graph = this.state.adjacency_list\n    console.log(this.state.adjacency_list)\n    console.log(graph)\n    var queue = [start_node] \n    console.log(start_node)\n    console.log(queue)\n    var visited = {}\n    var new_queue = [] \n    var parents = {}\n    var output = []\n    while (queue.length > 0 && !(target_node in visited)) {\n        new_queue = [];  \n        for (let i = 0; i < queue.length; i++) { \n            console.log(queue[i])\n            console.log(graph[queue[i]])\n            for (let j = 0; j < graph[queue[i]].length; j++) { \n                if (!(graph[queue[i]][j] in visited)) { \n                    parents[graph[queue[i]][j]] = queue[i]\n                    new_queue.push(graph[queue[i]][j])\n                    visited[graph[queue[i]][j]] = true \n                }\n            }\n        }\n        queue = new_queue;  \n        setTimeout(function() { \n          for (let k = 0; k < queue.length; k++) { \n            this.changeTraverseCondition(queue[k], \"considered\")\n          }\n        }.bind(this), 500)\n    }\n    if (target_node in visited) { \n        var current_node = target_node; \n        while (output.includes(start_node) == false) { \n            output.push(current_node); \n            current_node = parents[current_node]; \n            setTimeout(function() {\n              this.changeTraverseCondition(output[-1], \"chosen\")\n            }.bind(this), 500)\n        }\n    }\n    console.log(output)\n  }\n\n  renderElement(i) { \n    return <Element id={i} condition={this.state.conditions[i]} changecond={() => this.changeInitialCondition(i)}/>\n  }\n\n  renderElements(start) { \n    var elements = []; \n    for (let i = 20*(start-1) + 1; i <= 20*start; i++) { \n      elements.push(this.renderElement(i)); \n    }\n    return elements\n  }\n\n  renderBoard() { \n    var board = []; \n    for (let i = 1; i <= 20; i++) { \n      board.push(<div className = \"board-row\" style= {{margin: '0'}}> {this.renderElements(i)}  </div>); \n    }\n    return board\n  }\n\n  render() { \n    return (\n      <div> \n      {this.renderBoard()}\n      <button onClick = {this.BFS}> Breadth First Search </button>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Graph/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}