{"ast":null,"code":"import _assertThisInitialized from\"/Users/tungdo/pathfinding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"/Users/tungdo/pathfinding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tungdo/pathfinding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/tungdo/pathfinding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tungdo/pathfinding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import logo from\"./logo.svg\";import'./App.css';import{Component}from'react';import{NavDropdown,Navbar,Container,Nav}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import pic1 from'./pic1.png';import pic2 from'./pic2.png';import pic4 from'./pic4.png';import pic5 from'./pic5.png';import pic6 from'./pic6.png';import pic7 from'./pic7.png';/* TODO: \n-  add A* search \n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function popUpTutorial(event){var modal=document.querySelector(\".modal\");var closeBtn=document.querySelector(\".close\");modal.style.display=\"block\";closeBtn.addEventListener(\"click\",function(){modal.style.display=\"none\";});}var Element=/*#__PURE__*/function(_Component){_inherits(Element,_Component);var _super=_createSuper(Element);function Element(props){_classCallCheck(this,Element);return _super.call(this,props);}_createClass(Element,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.condition!=prevProps.condition){var current_element=document.getElementById(this.props.id);if(this.props.condition==\"default\"){current_element.style.background='#FFFFFF';}else if(this.props.condition==\"block\"){current_element.style.background=\"#000000\";}else if(this.props.condition==\"considered-d\"){current_element.style.background=\"#FFB266\";}else if(this.props.condition==\"considered\"){current_element.style.background=\"#FF8000\";}else if(this.props.condition==\"endpoint\"){current_element.style.background=\"#FF99FF\";}else if(this.props.condition==\"chosen\"){current_element.style.background=\"#80FF00\";}};}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"button\",{className:\"square\",id:this.props.id,condition:this.props.condition,onClick:this.props.changecond,children:\"  \"});}}]);return Element;}(Component);;var Graph=/*#__PURE__*/function(_Component2){_inherits(Graph,_Component2);var _super2=_createSuper(Graph);function Graph(props){var _this;_classCallCheck(this,Graph);_this=_super2.call(this,props);_this.changeInitialCondition=_this.changeInitialCondition.bind(_assertThisInitialized(_this));_this.addNodeToGraph=_this.addNodeToGraph.bind(_assertThisInitialized(_this));_this.changeTraverseCondition=_this.changeTraverseCondition.bind(_assertThisInitialized(_this));_this.resetExceptEndPoints=_this.resetExceptEndPoints.bind(_assertThisInitialized(_this));_this.reset=_this.reset.bind(_assertThisInitialized(_this));_this.resetHelper=_this.resetHelper.bind(_assertThisInitialized(_this));_this.BFS=_this.BFS.bind(_assertThisInitialized(_this));_this.dijkstra=_this.dijkstra.bind(_assertThisInitialized(_this));_this.notVertical=_this.notVertical.bind(_assertThisInitialized(_this));_this.findCoordinates=_this.findCoordinates.bind(_assertThisInitialized(_this));_this.findDistance=_this.findDistance.bind(_assertThisInitialized(_this));_this.deleteNodeFromGraph=_this.deleteNodeFromGraph.bind(_assertThisInitialized(_this));_this.generateMazePrimHelper=_this.generateMazePrimHelper.bind(_assertThisInitialized(_this));_this.generateMazeRandomHelper=_this.generateMazeRandomHelper.bind(_assertThisInitialized(_this));_this.generateMazeRandom=_this.generateMazeRandom.bind(_assertThisInitialized(_this));_this.generateMazePrim=_this.generateMazePrim.bind(_assertThisInitialized(_this));_this.restoreEndpoints=_this.restoreEndpoints.bind(_assertThisInitialized(_this));_this.state={adjacency_list:{},endpoints:[],conditions:{}};for(var i=1;i<=400;i++){_this.state.conditions[i]=\"default\";};/* TODO: initialize adjacency_list */var new_adjacency_list={};var first_row=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];var last_row=[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];var first_col=[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];var last_col=[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];for(var _i=1;_i<=400;_i++){if(_i==1){new_adjacency_list[1]=[2,21,22];}else if(_i==20){new_adjacency_list[20]=[19,39,40];}else if(_i==381){new_adjacency_list[381]=[361,362,382];}else if(_i==400){new_adjacency_list[400]=[379,380,399];}else if(first_row.includes(_i)){new_adjacency_list[_i]=[_i-1,_i+1,_i+20,_i+19,_i+21];}else if(last_row.includes(_i)){new_adjacency_list[_i]=[_i-1,_i+1,_i-20,_i-19,_i-21];}else if(first_col.includes(_i)){new_adjacency_list[_i]=[_i-20,_i+20,_i+1,_i-19,_i+21];}else if(last_col.includes(_i)){new_adjacency_list[_i]=[_i-1,_i-21,_i+20,_i+19,_i-20];}else{new_adjacency_list[_i]=[_i-1,_i+1,_i-19,_i-20,_i-21,_i+19,_i+20,_i+21];}};//this.state.adjacency_list = new_adjacency_list;\n_this.state.adjacency_list=new_adjacency_list;return _this;}_createClass(Graph,[{key:\"notVertical\",value:function notVertical(i,j){var vertical_candidates=[i-1,i+1,i-20,i+20];if(vertical_candidates.includes(j)){return false;}else{return true;}}},{key:\"findCoordinates\",value:function findCoordinates(i){var x_coordinate=i%20;var y_coordinate=Math.floor(i/20)+1;return[x_coordinate,y_coordinate];}},{key:\"findDistance\",value:function findDistance(i,j){var i_coordinate=this.findCoordinates(i);var j_coordinate=this.findCoordinates(j);var distance=Math.sqrt(Math.pow(i_coordinate[0]-j_coordinate[0],2)+Math.pow(i_coordinate[1]-j_coordinate[2],2));return distance;}},{key:\"changeInitialCondition\",value:function changeInitialCondition(i){var new_conditions=this.state.conditions;var new_endpoints=this.state.endpoints;var new_adjacency_list=this.state.adjacency_list;if(this.state.conditions[i]==\"default\"){new_conditions[i]=\"endpoint\";new_endpoints.push(i);}else if(this.state.conditions[i]==\"endpoint\"){new_conditions[i]=\"block\";new_endpoints.splice(new_endpoints.indexOf(i),1);new_adjacency_list=this.deleteNodeFromGraph(i);}else if(this.state.conditions[i]==\"block\"){new_conditions[i]=\"default\";new_adjacency_list=this.addNodeToGraph(i);}this.setState(function(state){return{conditions:new_conditions,endpoints:new_endpoints,adjacency_list:new_adjacency_list};});}},{key:\"deleteNodeFromGraph\",value:function deleteNodeFromGraph(i){var new_adjacency_list=this.state.adjacency_list;new_adjacency_list[i]=[];var candidates=[i-1,i+1,i-19,i-20,i-21,i+19,i+20,i+21];for(var j=0;j<candidates.length;j++){if(candidates[j]in new_adjacency_list){if(new_adjacency_list[candidates[j]].includes(i)){new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i),1);}}}return new_adjacency_list;}},{key:\"addNodeToGraph\",value:function addNodeToGraph(i){var new_adjacency_list=this.state.adjacency_list;var first_row=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];var last_row=[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];var first_col=[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];var last_col=[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];if(i==1){new_adjacency_list[1]=[2,21,22];}else if(i==20){new_adjacency_list[20]=[19,39,40];}else if(i==381){new_adjacency_list[381]=[361,362,382];}else if(i==400){new_adjacency_list[400]=[379,380,399];}else if(first_row.includes(i)){new_adjacency_list[i]=[i-1,i+1,i+20,i+19,i+21];}else if(last_row.includes(i)){new_adjacency_list[i]=[i-1,i+1,i-20,i-19,i-21];}else if(first_col.includes(i)){new_adjacency_list[i]=[i-20,i+20,i+1,i-19,i+21];}else if(last_col.includes(i)){new_adjacency_list[i]=[i-1,i-21,i+20,i+19,i-20];}else{new_adjacency_list[i]=[i-1,i+1,i-19,i-20,i-21,i+19,i+20,i+21];}for(var k=0;k<new_adjacency_list[i].length;k++){var element_need_i=new_adjacency_list[i][k];new_adjacency_list[element_need_i].push(i);}return new_adjacency_list;}},{key:\"changeTraverseCondition\",value:function changeTraverseCondition(i,new_status){var new_conditions=this.state.conditions;var new_adjacency_list=this.state.adjacency_list;var new_endpoints=this.state.endpoints;new_conditions[i]=new_status;this.setState(function(state){return{conditions:new_conditions,endpoints:new_endpoints,adjacency_list:new_adjacency_list};});}},{key:\"resetExceptEndPoints\",value:function resetExceptEndPoints(){var new_conditions=this.state.conditions;var new_adjacency_list=this.state.adjacency_list;var new_endpoints=this.state.endpoints;for(var i=1;i<=400;i++){if(!new_endpoints.includes(i)&&new_conditions[i]!=\"block\"){new_conditions[i]=\"default\";}else if(new_endpoints.includes(i)){new_conditions[i]=\"endpoint\";}};this.setState(function(state){return{conditions:new_conditions,endpoints:new_endpoints,adjacency_list:new_adjacency_list};});}},{key:\"restoreEndpoints\",value:function restoreEndpoints(){var new_conditions=this.state.conditions;for(var i=0;i<this.state.endpoints.length;i++){new_conditions[this.state.endpoints[i]]=\"endpoint\";};this.setState(function(state){return{conditions:new_conditions};});}},{key:\"resetHelper\",value:function resetHelper(){var new_conditions=[];var new_endpoints=[];var new_adjacency_list={};var first_row=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];var last_row=[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];var first_col=[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];var last_col=[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];for(var i=1;i<=400;i++){if(i==1){new_adjacency_list[1]=[2,21,22];}else if(i==20){new_adjacency_list[20]=[19,39,40];}else if(i==381){new_adjacency_list[381]=[361,362,382];}else if(i==400){new_adjacency_list[400]=[379,380,399];}else if(first_row.includes(i)){new_adjacency_list[i]=[i-1,i+1,i+20,i+19,i+21];}else if(last_row.includes(i)){new_adjacency_list[i]=[i-1,i+1,i-20,i-19,i-21];}else if(first_col.includes(i)){new_adjacency_list[i]=[i-20,i+20,i+1,i-19,i+21];}else if(last_col.includes(i)){new_adjacency_list[i]=[i-1,i-21,i+20,i+19,i-20];}else{new_adjacency_list[i]=[i-1,i+1,i-19,i-20,i-21,i+19,i+20,i+21];}};for(var _i2=1;_i2<=400;_i2++){new_conditions[_i2]=\"default\";};return[new_conditions,new_endpoints,new_adjacency_list];}},{key:\"reset\",value:function reset(){var _this2=this;this.setState(function(state){return{conditions:_this2.resetHelper()[0],endpoints:_this2.resetHelper()[1],adjacency_list:_this2.resetHelper()[2]};});}},{key:\"generateMazeRandom\",value:function generateMazeRandom(){var _this3=this;this.setState(function(state){return{conditions:_this3.resetHelper()[0],endpoints:_this3.resetHelper()[1],adjacency_list:_this3.resetHelper()[2]};},this.generateMazeRandomHelper);}},{key:\"generateMazePrim\",value:function generateMazePrim(){var _this4=this;this.setState(function(state){return{conditions:_this4.resetHelper()[0],endpoints:_this4.resetHelper()[1],adjacency_list:_this4.resetHelper()[2]};},this.generateMazePrimHelper);}},{key:\"generateMazeRandomHelper\",value:function generateMazeRandomHelper(){var block_nodes=[];var new_conditions=this.state.conditions;var number_blocks=Math.floor(Math.random()*50+50);for(var i=0;i<number_blocks;i++){var random_elem=Math.floor(Math.random()*400+1);while(new_conditions[random_elem]!=\"default\"){random_elem=Math.floor(Math.random()*400+1);}new_conditions[random_elem]=\"block\";block_nodes.push(random_elem);}this.setState(function(state){return{conditions:new_conditions};});for(var _i3=0;_i3<block_nodes.length;_i3++){this.setState({adjacency_list:this.deleteNodeFromGraph(block_nodes[_i3])});}}},{key:\"generateMazePrimHelper\",value:function generateMazePrimHelper(){var new_conditions=this.state.conditions;var original_graph=this.state.adjacency_list;var explored={};var cell_list=[];for(var i=1;i<=400;i++){new_conditions[i]=\"block\";}var first_elem=Math.floor(Math.random()*400+1);new_conditions[first_elem]=\"default\";explored[1]=true;for(var j=0;j<original_graph[1].length;j++){cell_list.push(original_graph[1][j]);}var building_blocks=setInterval(function(){var _this5=this;if(cell_list.length==0){console.log(\"here\");clearInterval(building_blocks);var _loop=function _loop(_i4){if(!(_i4 in explored)){_this5.setState(function(state){return{adjacency_list:_this5.deleteNodeFromGraph(_i4)};});}};for(var _i4=1;_i4<=400;_i4++){_loop(_i4);}return;}var current_node=cell_list[Math.floor(Math.random()*cell_list.length)];console.log(current_node);var neighbors=original_graph[current_node];var nums_explored=0;for(var _i5=0;_i5<neighbors.length;_i5++){if(neighbors[_i5]in explored){nums_explored+=1;}}if(nums_explored<2){explored[current_node]=true;new_conditions[current_node]=\"default\";for(var _j=0;_j<original_graph[current_node].length;_j++){if(!(original_graph[current_node][_j]in explored)){cell_list.push(original_graph[current_node][_j]);}}}cell_list.splice(cell_list.indexOf(current_node),1);this.setState(function(state){return{conditions:new_conditions};});}.bind(this),0.001);}},{key:\"BFS\",value:function BFS(){this.resetExceptEndPoints();if(this.state.endpoints.length!=2){return;}var start_node=this.state.endpoints[0];var target_node=this.state.endpoints[1];var graph=this.state.adjacency_list;var queue=[start_node];var visited={};visited[start_node]=true;var new_queue=[];var parents={};var considering_intervals=setInterval(function(){if(queue.length==0||target_node in visited){clearInterval(considering_intervals);if(target_node in visited){var current_node=target_node;var getting_path=setInterval(function(){if(current_node==start_node){this.changeTraverseCondition(current_node,\"chosen\");clearInterval(getting_path);this.restoreEndpoints();return;}this.changeTraverseCondition(current_node,\"chosen\");current_node=parents[current_node];}.bind(this),300);}return;}new_queue=[];for(var i=0;i<queue.length;i++){for(var j=0;j<graph[queue[i]].length;j++){if(!(graph[queue[i]][j]in visited)){parents[graph[queue[i]][j]]=queue[i];new_queue.push(graph[queue[i]][j]);visited[graph[queue[i]][j]]=true;}}}queue=new_queue;for(var k=0;k<queue.length;k++){if(this.state.conditions[queue[k]]!=\"endpoint\"){this.changeTraverseCondition(queue[k],\"considered\");}}}.bind(this),400);}},{key:\"dijkstra\",value:function dijkstra(){this.resetExceptEndPoints();if(this.state.endpoints.length!=2){return;}var start_node=this.state.endpoints[0];var target_node=this.state.endpoints[1];var graph=this.state.adjacency_list;var distances=[1000];var visited={};var parents={};for(var i=1;i<=400;i++){if(i==start_node){distances.push(0);}else{distances.push(1000);}}var current_min_distance=0;var current_min_node=start_node;var considering_nodes=setInterval(function(){if(!this.state.endpoints.includes(current_min_node)){this.changeTraverseCondition(current_min_node,\"considered\");}if(target_node in visited||current_min_distance==1000){clearInterval(considering_nodes);var current_node=target_node;var getting_path=setInterval(function(){if(current_node==start_node){this.changeTraverseCondition(current_node,\"chosen\");this.restoreEndpoints();clearInterval(getting_path);return;}this.changeTraverseCondition(current_node,\"chosen\");current_node=parents[current_node];}.bind(this),300);return;}var current_distances={};for(var j=0;j<graph[current_min_node].length;j++){if(!(graph[current_min_node][j]in visited)){if(this.notVertical(current_min_node,graph[current_min_node][j])){current_distances[graph[current_min_node][j]]=current_min_distance+1.4;}else{current_distances[graph[current_min_node][j]]=current_min_distance+1;}}}Object.keys(current_distances).forEach(function(key){if(current_distances[key]<distances[key]){distances[key]=current_distances[key];parents[key]=current_min_node;if(!this.state.endpoints.includes(parseInt(key))){this.changeTraverseCondition(key,\"considered-d\");}}},this);distances[current_min_node]=1000;visited[current_min_node]=true;current_min_distance=Math.min.apply(Math,distances);current_min_node=distances.indexOf(current_min_distance);}.bind(this),40);}},{key:\"renderElement\",value:function renderElement(i){var _this6=this;return/*#__PURE__*/_jsx(Element,{id:i,condition:this.state.conditions[i],changecond:function changecond(){return _this6.changeInitialCondition(i);}});}},{key:\"renderElements\",value:function renderElements(start){var elements=[];for(var i=20*(start-1)+1;i<=20*start;i++){elements.push(this.renderElement(i));}return elements;}},{key:\"renderBoard\",value:function renderBoard(){var board=[];for(var i=1;i<=20;i++){board.push(/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",style:{marginLeft:\"400px\"},children:[\" \",this.renderElements(i),\"  \"]}));}return board;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{sticky:\"top\",bg:\"dark\",variant:\"dark\",style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Navbar.Brand,{children:\" Pathfinding Visualizer\"}),/*#__PURE__*/_jsxs(Nav,{className:\"me-auto\",children:[/*#__PURE__*/_jsx(Nav.Link,{onClick:popUpTutorial,children:\" Tutorial \"}),/*#__PURE__*/_jsxs(NavDropdown,{title:\"Run Pathfinding Algorithms\",id:\"basic-nav-dropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Item,{onClick:this.BFS,children:\"Breadth First Search\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{onClick:this.dijkstra,children:\" Dijkstra's Algorithm\"})]}),/*#__PURE__*/_jsxs(NavDropdown,{title:\"Generate Maze\",id:\"basic-nav-dropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Item,{onClick:this.generateMazePrim,children:\" Randomized Prim's Algorithm\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{onClick:this.generateMazeRandom,children:\" Just a random maze\"})]}),/*#__PURE__*/_jsx(Nav.Link,{onClick:this.reset,children:\" Reset Board \"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"auto\",marginRight:\"auto\",width:\"700px\"},children:\" Click on a grid to make it a start/end grid. We need two grids to run path finding algorithms. \"}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"auto\",marginRight:\"auto\",width:\"500px\"},children:\" Click twice on a grid to make it an obstacle. \"}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"auto\",marginRight:\"auto\",width:\"500px\"},children:\" Click three times on a grid to reset it to the original grid. \"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"auto\",marginRight:\"auto\",width:\"1000px\",marginBottom:\"15px\"},children:[/*#__PURE__*/_jsx(\"button\",{style:{background:\"#FF99FF\"},children:\" \"}),\" \",/*#__PURE__*/_jsx(\"span\",{class:\"legend\",children:\" Start/end grid\"}),/*#__PURE__*/_jsx(\"button\",{style:{background:\"#000000\"},children:\" \"}),\" \",/*#__PURE__*/_jsx(\"span\",{class:\"legend\",children:\" Obstacle grid\"}),/*#__PURE__*/_jsx(\"button\",{style:{background:\"#FF8000\"},children:\" \"}),\" \",/*#__PURE__*/_jsx(\"span\",{class:\"legend\",children:\" Explored grid\"}),/*#__PURE__*/_jsx(\"button\",{style:{background:\"#FFB266\"},children:\" \"}),\" \",/*#__PURE__*/_jsx(\"span\",{class:\"legend\",children:\" Soon-to-be-explored grid\"}),/*#__PURE__*/_jsx(\"button\",{style:{background:\"#80FF00\"},children:\" \"}),\" \",/*#__PURE__*/_jsx(\"span\",{class:\"legend\",children:\" Shortest-path grid\"})]}),this.renderBoard()]});}}]);return Graph;}(Component);function App(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Graph,{}),/*#__PURE__*/_jsx(\"div\",{class:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"modal_content\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"close\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"p\",{children:\" For a quick start, click on two grids. \"}),/*#__PURE__*/_jsx(\"img\",{src:pic1}),/*#__PURE__*/_jsx(\"p\",{children:\" Then, click on \\\"Run Pathfinding Algorithms\\\" and choose an algorithm you want to find the shortest path with\"}),/*#__PURE__*/_jsx(\"img\",{src:pic2}),/*#__PURE__*/_jsx(\"p\",{children:\" Now you can see how the algorithms find the shortest path between two grids! \"}),/*#__PURE__*/_jsx(\"img\",{src:pic4}),/*#__PURE__*/_jsx(\"p\",{children:\" Click twice on a grid to make it an obstacle. \"}),/*#__PURE__*/_jsx(\"img\",{src:pic5}),/*#__PURE__*/_jsx(\"p\",{children:\" You can also choose to quickly build a maze, aka placing obstacles \\\"smartly\\\", from one of the maze generation algorithms by clicking on \\\"Generate Maze\\\" and choose one algorithm. \"}),/*#__PURE__*/_jsx(\"img\",{src:pic6}),/*#__PURE__*/_jsx(\"p\",{children:\" Now you can watch how our algorithm builds a maze! You can put two start/end grids on this new maze and run the pathfinding algorithm as well! \"}),/*#__PURE__*/_jsx(\"img\",{src:pic7}),/*#__PURE__*/_jsx(\"p\",{children:\" Finally, to reset our board, click on \\\"Reset board\\\" on the nagivation bar. \"}),/*#__PURE__*/_jsx(\"p\",{children:\" Enjoy pathfinding! \"})]})})]});}export default App;","map":{"version":3,"sources":["/Users/tungdo/pathfinding/src/App.js"],"names":["Component","NavDropdown","Navbar","Container","Nav","pic1","pic2","pic4","pic5","pic6","pic7","popUpTutorial","event","modal","document","querySelector","closeBtn","style","display","addEventListener","Element","props","prevProps","condition","current_element","getElementById","id","background","changecond","Graph","changeInitialCondition","bind","addNodeToGraph","changeTraverseCondition","resetExceptEndPoints","reset","resetHelper","BFS","dijkstra","notVertical","findCoordinates","findDistance","deleteNodeFromGraph","generateMazePrimHelper","generateMazeRandomHelper","generateMazeRandom","generateMazePrim","restoreEndpoints","state","adjacency_list","endpoints","conditions","i","new_adjacency_list","first_row","last_row","first_col","last_col","includes","j","vertical_candidates","x_coordinate","y_coordinate","Math","floor","i_coordinate","j_coordinate","distance","sqrt","pow","new_conditions","new_endpoints","push","splice","indexOf","setState","candidates","length","k","element_need_i","new_status","block_nodes","number_blocks","random","random_elem","original_graph","explored","cell_list","first_elem","building_blocks","setInterval","console","log","clearInterval","current_node","neighbors","nums_explored","start_node","target_node","graph","queue","visited","new_queue","parents","considering_intervals","getting_path","distances","current_min_distance","current_min_node","considering_nodes","current_distances","Object","keys","forEach","key","parseInt","min","apply","start","elements","renderElement","board","marginLeft","renderElements","marginBottom","marginRight","width","renderBoard","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport {NavDropdown, Navbar, Container, Nav} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport pic1 from './pic1.png'\nimport pic2 from './pic2.png'\nimport pic4 from './pic4.png'\nimport pic5 from './pic5.png'\nimport pic6 from './pic6.png'\nimport pic7 from './pic7.png'\n\n /* TODO: \n-  add A* search \n */\n\nfunction popUpTutorial(event) {\n  const modal = document.querySelector(\".modal\")\n  const closeBtn = document.querySelector(\".close\")\n  modal.style.display = \"block\";\n  closeBtn.addEventListener(\"click\", () => {\n    modal.style.display = \"none\";\n  })\n}\n\nclass Element extends Component { \n  constructor(props) {\n    super(props);\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.condition != prevProps.condition) { \n      var current_element = document.getElementById(this.props.id);\n      if (this.props.condition == \"default\") { \n        current_element.style.background = '#FFFFFF';\n      }\n      else if (this.props.condition == \"block\") { \n        current_element.style.background = \"#000000\";\n      }\n      else if (this.props.condition == \"considered-d\") { \n        current_element.style.background = \"#FFB266\"\n      }\n      else if (this.props.condition == \"considered\") { \n        current_element.style.background = \"#FF8000\";\n      }\n      else if (this.props.condition == \"endpoint\") { \n        current_element.style.background = \"#FF99FF\";\n      }\n      else if (this.props.condition == \"chosen\") { \n        current_element.style.background = \"#80FF00\";\n      }\n    }; \n  };\n  render() { \n    return <button className=\"square\" id = {this.props.id} condition = {this.props.condition} onClick = {this.props.changecond}>  </button>;\n  };\n};\nclass Graph extends Component { \n  constructor(props) { \n    super(props); \n    this.changeInitialCondition = this.changeInitialCondition.bind(this);\n    this.addNodeToGraph = this.addNodeToGraph.bind(this);\n    this.changeTraverseCondition = this.changeTraverseCondition.bind(this);\n    this.resetExceptEndPoints = this.resetExceptEndPoints.bind(this); \n    this.reset = this.reset.bind(this); \n    this.resetHelper = this.resetHelper.bind(this); \n    this.BFS = this.BFS.bind(this);\n    this.dijkstra = this.dijkstra.bind(this);\n    this.notVertical = this.notVertical.bind(this)\n    this.findCoordinates = this.findCoordinates.bind(this)\n    this.findDistance = this.findDistance.bind(this)\n    this.deleteNodeFromGraph = this.deleteNodeFromGraph.bind(this)\n    this.generateMazePrimHelper = this.generateMazePrimHelper.bind(this)\n    this.generateMazeRandomHelper = this.generateMazeRandomHelper.bind(this)\n    this.generateMazeRandom = this.generateMazeRandom.bind(this)\n    this.generateMazePrim = this.generateMazePrim.bind(this)\n    this.restoreEndpoints = this.restoreEndpoints.bind(this)\n    this.state = { \n      adjacency_list: {},\n      endpoints:[], \n      conditions:{}, \n    };\n    for (let i = 1; i <= 400; i++) {\n      this.state.conditions[i] = \"default\"; \n    };\n    /* TODO: initialize adjacency_list */\n    var new_adjacency_list = {}\n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361]\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380]\n    for (let i = 1; i <= 400; i++) { \n      if (i == 1) { \n        new_adjacency_list[1] = [2,21, 22]\n      }\n      else if (i == 20) { \n        new_adjacency_list[20] = [19,39,40]\n      }\n      else if (i == 381) { \n        new_adjacency_list[381] = [361,362,382]\n      }\n      else if (i == 400) { \n        new_adjacency_list[400] = [379, 380, 399]\n      }\n      else if (first_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21]\n      }\n      else if (last_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21]\n      }\n      else if (first_col.includes(i)) { \n        new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21]\n      }\n      else if (last_col.includes(i)) { \n        new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20]\n      }\n      else { \n        new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      }\n    };\n    //this.state.adjacency_list = new_adjacency_list;\n    this.state.adjacency_list = new_adjacency_list\n  };\n\n  notVertical(i, j) { \n    var vertical_candidates = [i-1, i+1, i-20, i+20]\n    if (vertical_candidates.includes(j)) { \n      return false; \n    }\n    else { \n      return true;  \n    }\n  }\n\n  findCoordinates(i) { \n    var x_coordinate = i%20; \n    var y_coordinate = Math.floor(i/20) + 1; \n    return [x_coordinate, y_coordinate]; \n  }\n\n  findDistance(i, j) { \n    var i_coordinate = this.findCoordinates(i); \n    var j_coordinate = this.findCoordinates(j);\n    var distance = Math.sqrt(Math.pow((i_coordinate[0] - j_coordinate[0]),2) + Math.pow(i_coordinate[1] - j_coordinate[2], 2))\n    return distance \n  }\n\n  changeInitialCondition(i) { \n    var new_conditions = this.state.conditions;\n    var new_endpoints = this.state.endpoints;\n    var new_adjacency_list = this.state.adjacency_list; \n    if (this.state.conditions[i] == \"default\") { \n      new_conditions[i] = \"endpoint\"; \n      new_endpoints.push(i) \n    }\n    else if (this.state.conditions[i] == \"endpoint\") { \n      new_conditions[i] = \"block\"; \n      new_endpoints.splice(new_endpoints.indexOf(i), 1); \n      new_adjacency_list = this.deleteNodeFromGraph(i);\n    }\n    else if (this.state.conditions[i] == \"block\") { \n      new_conditions[i] = \"default\"; \n      new_adjacency_list = this.addNodeToGraph(i)\n    }\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }; \n\n  deleteNodeFromGraph(i) {\n    var new_adjacency_list = this.state.adjacency_list; \n    new_adjacency_list[i] = [];\n    var candidates = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21];\n    for (var j=0; j < candidates.length; j++) { \n      if (candidates[j] in new_adjacency_list) { \n        if (new_adjacency_list[candidates[j]].includes(i)) { \n          new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i), 1); \n        }\n      }\n    }\n    return new_adjacency_list;  \n  }\n\n  addNodeToGraph(i) { \n    var new_adjacency_list = this.state.adjacency_list; \n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];\n    if (i == 1) { \n      new_adjacency_list[1] = [2,21, 22];\n    }\n    else if (i == 20) { \n      new_adjacency_list[20] = [19,39,40];\n    }\n    else if (i == 381) { \n      new_adjacency_list[381] = [361,362,382];\n    }\n    else if (i == 400) { \n      new_adjacency_list[400] = [379, 380, 399];\n    }\n    else if (first_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21];\n    }\n    else if (last_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21];\n    }\n    else if (first_col.includes(i)) { \n      new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21];\n    }\n    else if (last_col.includes(i)) { \n      new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20];\n    }\n    else { \n      new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21];\n    }\n    for (let k=0; k < new_adjacency_list[i].length; k++) { \n      var element_need_i = new_adjacency_list[i][k];\n      new_adjacency_list[element_need_i].push(i);\n    }\n    return new_adjacency_list; \n  };\n\n  changeTraverseCondition(i, new_status) { \n    var new_conditions = this.state.conditions; \n    var new_adjacency_list = this.state.adjacency_list; \n    var new_endpoints = this.state.endpoints\n    new_conditions[i] = new_status; \n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  resetExceptEndPoints() { \n    var new_conditions = this.state.conditions \n    var new_adjacency_list = this.state.adjacency_list\n    var new_endpoints = this.state.endpoints\n    for (let i = 1; i <= 400; i++) {\n      if (!(new_endpoints.includes(i)) && new_conditions[i] != \"block\") {\n        new_conditions[i] = \"default\";\n      } \n      else if (new_endpoints.includes(i)) { \n        new_conditions[i] = \"endpoint\"; \n      }\n    };\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  restoreEndpoints() { \n    var new_conditions = this.state.conditions\n    for (let i = 0; i < this.state.endpoints.length; i++) { \n      new_conditions[this.state.endpoints[i]] = \"endpoint\"\n    }; \n    this.setState(state => ({ \n      conditions: new_conditions \n    }))\n  }\n\n  resetHelper() { \n    var new_conditions = []\n    var new_endpoints = []\n    var new_adjacency_list = {}\n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361]\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380]\n    for (let i = 1; i <= 400; i++) { \n      if (i == 1) { \n        new_adjacency_list[1] = [2,21, 22]\n      }\n      else if (i == 20) { \n        new_adjacency_list[20] = [19,39,40]\n      }\n      else if (i == 381) { \n        new_adjacency_list[381] = [361,362,382]\n      }\n      else if (i == 400) { \n        new_adjacency_list[400] = [379, 380, 399]\n      }\n      else if (first_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21]\n      }\n      else if (last_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21]\n      }\n      else if (first_col.includes(i)) { \n        new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21]\n      }\n      else if (last_col.includes(i)) { \n        new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20]\n      }\n      else { \n        new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      }\n    };\n    for (let i = 1; i <= 400; i++) {\n      new_conditions[i] = \"default\"; \n    };\n    return [new_conditions, new_endpoints, new_adjacency_list]\n  }\n\n  reset() { \n    this.setState(state => ({ \n      conditions: this.resetHelper()[0],\n      endpoints: this.resetHelper()[1],\n      adjacency_list: this.resetHelper()[2], \n    })); \n  }\n\n  generateMazeRandom() { \n    this.setState(state => ({ \n      conditions: this.resetHelper()[0],\n      endpoints: this.resetHelper()[1],\n      adjacency_list: this.resetHelper()[2], \n    }), this.generateMazeRandomHelper); \n  }\n  generateMazePrim() { \n    this.setState(state => ({ \n      conditions: this.resetHelper()[0],\n      endpoints: this.resetHelper()[1],\n      adjacency_list: this.resetHelper()[2], \n    }), this.generateMazePrimHelper); \n  }\n\n  generateMazeRandomHelper() { \n    var block_nodes = []\n    var new_conditions = this.state.conditions; \n    var number_blocks = Math.floor(Math.random()*50 + 50) \n    for (let i = 0; i < number_blocks; i++) { \n      var random_elem = Math.floor(Math.random()*400 + 1) \n      while (new_conditions[random_elem] != \"default\") { \n        random_elem = Math.floor(Math.random()*400 + 1) \n      }\n      new_conditions[random_elem] = \"block\"\n      block_nodes.push(random_elem)\n    }\n    this.setState(state => ({ \n      conditions: new_conditions\n    }))\n    for (let i=0; i < block_nodes.length; i++) { \n      this.setState({ \n        adjacency_list: this.deleteNodeFromGraph(block_nodes[i])\n      })\n    }\n  }\n\n  generateMazePrimHelper() { \n    var new_conditions = this.state.conditions; \n    var original_graph = this.state.adjacency_list; \n    var explored = {}\n    var cell_list = [] \n    for (let i=1; i <= 400; i++) { \n      new_conditions[i] = \"block\";\n    }\n    var first_elem = Math.floor(Math.random() * 400 + 1); \n    new_conditions[first_elem] = \"default\"; \n    explored[1] = true \n    for (let j=0; j < original_graph[1].length; j++) { \n      cell_list.push(original_graph[1][j]); \n    }\n    var building_blocks = setInterval(function() { \n      if (cell_list.length == 0) { \n        console.log(\"here\")\n        clearInterval(building_blocks); \n        for (let i = 1; i <= 400; i++) { \n          if (!(i in explored)) { \n            this.setState(state => ({ \n              adjacency_list: this.deleteNodeFromGraph(i)\n            }))\n          }\n        }\n        return \n      }\n      var current_node = cell_list[Math.floor(Math.random()*cell_list.length)]; \n      console.log(current_node)\n      var neighbors = original_graph[current_node]; \n      var nums_explored = 0 \n      for (let i=0; i < neighbors.length; i++) { \n        if (neighbors[i] in explored) { \n          nums_explored += 1\n        }\n      }\n      if (nums_explored < 2) { \n        explored[current_node] = true \n        new_conditions[current_node] = \"default\" \n        for (let j=0; j < original_graph[current_node].length; j++) { \n          if (!(original_graph[current_node][j] in explored)) { \n            cell_list.push(original_graph[current_node][j]); \n          }\n        }\n      }\n      cell_list.splice(cell_list.indexOf(current_node), 1); \n      this.setState(state => ({ \n        conditions: new_conditions,\n      })); \n    }.bind(this), 0.001)\n  }\n\n  BFS() { \n    this.resetExceptEndPoints(); \n    if (this.state.endpoints.length != 2) { \n      return \n    }\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    var queue = [start_node]; \n    var visited = {};\n    visited[start_node] = true; \n    var new_queue = [];\n    var parents = {};\n    var considering_intervals = setInterval(function(){\n        if (queue.length == 0 || target_node in visited) { \n          clearInterval(considering_intervals);\n          if (target_node in visited) { \n            var current_node = target_node; \n            var getting_path = setInterval(function() { \n              if (current_node == start_node) { \n                this.changeTraverseCondition(current_node, \"chosen\");\n                clearInterval(getting_path); \n                this.restoreEndpoints(); \n                return \n              }\n              this.changeTraverseCondition(current_node, \"chosen\");\n              current_node = parents[current_node]; \n            }.bind(this), 300)\n          }\n          return \n        }\n        new_queue = [];  \n        for (let i = 0; i < queue.length; i++) { \n            for (let j = 0; j < graph[queue[i]].length; j++) { \n                if (!(graph[queue[i]][j] in visited)) { \n                    parents[graph[queue[i]][j]] = queue[i];\n                    new_queue.push(graph[queue[i]][j]);\n                    visited[graph[queue[i]][j]] = true;\n                }\n            }\n        }\n        queue = new_queue; \n        for (let k = 0; k < queue.length; k++) { \n            if (this.state.conditions[queue[k]] != \"endpoint\") { \n            this.changeTraverseCondition(queue[k], \"considered\");\n            }\n          }\n        }.bind(this), 400)\n  }\n\n  dijkstra() { \n    this.resetExceptEndPoints(); \n    if (this.state.endpoints.length != 2) { \n      return \n    }\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    var distances = [1000]\n    var visited = {}\n    var parents = {}\n    for (let i=1; i <= 400;i++) { \n        if (i == start_node) { \n            distances.push(0)\n        }\n        else { \n            distances.push(1000)\n        }\n    } \n    var current_min_distance = 0 \n    var current_min_node = start_node\n    var considering_nodes = setInterval(function() { \n        if (!(this.state.endpoints.includes(current_min_node))) { \n          this.changeTraverseCondition(current_min_node, \"considered\")\n        }\n        if ((target_node in visited) || current_min_distance == 1000) { \n            clearInterval(considering_nodes); \n            var current_node = target_node; \n            var getting_path = setInterval(function() { \n              if (current_node == start_node) { \n                this.changeTraverseCondition(current_node, \"chosen\");\n                this.restoreEndpoints(); \n                clearInterval(getting_path); \n                return \n              }\n              this.changeTraverseCondition(current_node, \"chosen\");\n              current_node = parents[current_node]; \n            }.bind(this), 300)\n            return \n        }\n        var current_distances = {}\n        for (let j=0; j < graph[current_min_node].length; j++) { \n            if (!(graph[current_min_node][j] in visited)) { \n              if (this.notVertical(current_min_node, graph[current_min_node][j])) { \n                current_distances[graph[current_min_node][j]] = current_min_distance + 1.4 \n              }\n              else { \n                current_distances[graph[current_min_node][j]] = current_min_distance + 1 \n              }\n        }\n        }\n        Object.keys(current_distances).forEach(function(key) { \n            if (current_distances[key] < distances[key]) { \n                distances[key] = current_distances[key]\n                parents[key] = current_min_node\n                if (!(this.state.endpoints.includes(parseInt(key)))) { \n                  this.changeTraverseCondition(key, \"considered-d\")\n                }\n            }\n        }, this)\n        distances[current_min_node] = 1000\n        visited[current_min_node] = true\n        current_min_distance = Math.min.apply(Math, distances);\n        current_min_node = distances.indexOf(current_min_distance);\n\n    }.bind(this), 40)\n  };\n\n  renderElement(i) { \n    return <Element id={i} condition={this.state.conditions[i]} changecond={() => this.changeInitialCondition(i)}/>\n  }\n\n  renderElements(start) { \n    var elements = []; \n    for (let i = 20*(start-1) + 1; i <= 20*start; i++) { \n      elements.push(this.renderElement(i)); \n    }\n    return elements\n  }\n\n  renderBoard() { \n    var board = []; \n    for (let i = 1; i <= 20; i++) { \n      board.push(<div className = \"board-row\" style={{marginLeft: \"400px\"}}> {this.renderElements(i)}  </div>); \n    }\n    return board\n  }\n\n  render() { \n    return (\n      <div> \n      <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" style={{marginBottom: \"15px\"}}>\n        <Container>\n        <Navbar.Brand> Pathfinding Visualizer</Navbar.Brand>\n        <Nav className=\"me-auto\">\n          <Nav.Link onClick={popUpTutorial}> Tutorial </Nav.Link>\n          <NavDropdown title=\"Run Pathfinding Algorithms\" id=\"basic-nav-dropdown\"> \n          <NavDropdown.Item onClick = {this.BFS}>Breadth First Search</NavDropdown.Item>\n          <NavDropdown.Item onClick = {this.dijkstra}> Dijkstra's Algorithm</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title=\"Generate Maze\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item onClick = {this.generateMazePrim}> Randomized Prim's Algorithm</NavDropdown.Item>\n          <NavDropdown.Item onClick = {this.generateMazeRandom}> Just a random maze</NavDropdown.Item>\n          </NavDropdown>\n          <Nav.Link onClick = {this.reset}> Reset Board </Nav.Link>\n        </Nav>\n        </Container>\n      </Navbar>\n      <div  style = {{marginBottom: \"10px\"}}> \n      <div style = {{marginLeft: \"auto\", marginRight: \"auto\", width: \"700px\"}}> Click on a grid to make it a start/end grid. We need two grids to run path finding algorithms. </div>\n      <div style = {{marginLeft: \"auto\", marginRight: \"auto\", width: \"500px\"}}> Click twice on a grid to make it an obstacle. </div>\n      <div style = {{marginLeft: \"auto\", marginRight: \"auto\", width: \"500px\"}}> Click three times on a grid to reset it to the original grid. </div>\n      </div>\n      <div style = {{marginLeft: \"auto\", marginRight: \"auto\", width: \"1000px\", marginBottom: \"15px\"}}> \n      <button style = {{background: \"#FF99FF\"}}> </button> <span class =\"legend\"> Start/end grid</span>\n      <button style = {{background: \"#000000\"}}> </button> <span class =\"legend\"> Obstacle grid</span>\n      <button style = {{background: \"#FF8000\"}}> </button> <span class =\"legend\"> Explored grid</span>\n      <button style = {{background: \"#FFB266\"}}> </button> <span class =\"legend\"> Soon-to-be-explored grid</span>\n      <button style = {{background: \"#80FF00\"}}> </button> <span class =\"legend\"> Shortest-path grid</span>\n       </div>\n      {this.renderBoard()}\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Graph/>\n    <div class=\"modal\">\n      <div class=\"modal_content\">\n        <span class=\"close\">&times;</span>\n        <p> For a quick start, click on two grids. </p>\n        <img src = {pic1} />\n        <p> Then, click on \"Run Pathfinding Algorithms\" and choose an algorithm you want to find the shortest path with</p>\n        <img src = {pic2} />\n        <p> Now you can see how the algorithms find the shortest path between two grids! </p> \n        <img src = {pic4} />\n        <p> Click twice on a grid to make it an obstacle. </p>\n        <img src = {pic5} />\n        <p> You can also choose to quickly build a maze, aka placing obstacles \"smartly\", from one of the maze generation algorithms by clicking on \"Generate Maze\" and choose one algorithm. </p>\n        <img src = {pic6} /> \n        <p> Now you can watch how our algorithm builds a maze! You can put two start/end grids on this new maze and run the pathfinding algorithm as well! </p>\n        <img src = {pic7} /> \n        <p> Finally, to reset our board, click on \"Reset board\" on the nagivation bar. </p>\n        <p> Enjoy pathfinding! </p>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}