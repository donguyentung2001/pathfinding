{"ast":null,"code":"var _jsxFileName = \"/Users/tungdo/pathfinder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlerp = function (a, b, u) {\n  return (1 - u) * a + u * b;\n};\n\nfade = function (element, property, start, end, duration) {\n  var interval = 10;\n  var steps = duration / interval;\n  var step_u = 1.0 / steps;\n  var u = 0.0;\n  var theInterval = setInterval(function () {\n    if (u >= 1.0) {\n      clearInterval(theInterval);\n    }\n\n    var r = Math.round(lerp(start.r, end.r, u));\n    var g = Math.round(lerp(start.g, end.g, u));\n    var b = Math.round(lerp(start.b, end.b, u));\n    var colorname = 'rgb(' + r + ',' + g + ',' + b + ')';\n    el.style.setProperty(property, colorname);\n    u += step_u;\n  }, interval);\n};\n\nclass Element extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.condition != prevProps.condition) {\n      var current_element = document.getElementById(this.props.id);\n\n      if (this.props.condition == \"default\") {\n        current_element.style.background = '#FFFFFF';\n      } else if (this.props.condition == \"block\") {\n        current_element.style.background = \"#000000\";\n      } else if (this.props.condition == \"considered-d\") {\n        current_element.style.background = \"#FFB266\";\n      } else if (this.props.condition == \"considered\") {\n        current_element.style.background = \"#FF8000\";\n      } else if (this.props.condition == \"endpoint\") {\n        current_element.style.background = \"#33FFFF\";\n      } else if (this.props.condition == \"chosen\") {\n        current_element.style.background = \"#00FF00\";\n      }\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.id,\n      condition: this.props.condition,\n      onClick: this.props.changecond,\n      children: [\" \", this.props.id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\n;\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.changeInitialCondition = this.changeInitialCondition.bind(this);\n    this.updateGraph = this.updateGraph.bind(this);\n    this.changeTraverseCondition = this.changeTraverseCondition.bind(this);\n    this.resetExceptEndPoints = this.resetExceptEndPoints.bind(this);\n    this.reset = this.reset.bind(this);\n    this.BFS = this.BFS.bind(this);\n    this.dijkstra = this.dijkstra.bind(this);\n    this.state = {\n      adjacency_list: {},\n      endpoints: [],\n      conditions: {}\n    };\n\n    for (let i = 1; i <= 400; i++) {\n      this.state.conditions[i] = \"default\";\n    }\n\n    ;\n    /* TODO: initialize adjacency_list */\n\n    var new_adjacency_list = {};\n    var first_row = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    var last_row = [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399];\n    var first_col = [21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361];\n    var last_col = [40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380];\n\n    for (let i = 1; i <= 400; i++) {\n      if (i == 1) {\n        new_adjacency_list[1] = [2, 21, 22];\n      } else if (i == 20) {\n        new_adjacency_list[20] = [19, 39, 40];\n      } else if (i == 381) {\n        new_adjacency_list[381] = [361, 362, 382];\n      } else if (i == 400) {\n        new_adjacency_list[400] = [379, 380, 399];\n      } else if (first_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i + 20, i + 19, i + 21];\n      } else if (last_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 20, i - 19, i - 21];\n      } else if (first_col.includes(i)) {\n        new_adjacency_list[i] = [i - 20, i + 20, i + 1, i - 19, i + 21];\n      } else if (last_col.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i - 21, i + 20, i + 19, i - 20];\n      } else {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n      }\n    }\n\n    ; //this.state.adjacency_list = new_adjacency_list;\n\n    this.state.adjacency_list = new_adjacency_list;\n  }\n\n  changeInitialCondition(i) {\n    var new_conditions = this.state.conditions;\n    var new_endpoints = this.state.endpoints;\n    var new_adjacency_list = this.state.adjacency_list;\n\n    if (this.state.conditions[i] == \"default\") {\n      new_conditions[i] = \"endpoint\";\n      new_endpoints.push(i);\n    } else if (this.state.conditions[i] == \"endpoint\") {\n      new_conditions[i] = \"block\";\n      new_endpoints.splice(new_endpoints.indexOf(i), 1);\n      new_adjacency_list[i] = [];\n      var candidates = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n\n      for (var j = 0; j < candidates.length; j++) {\n        if (candidates[j] in new_adjacency_list) {\n          if (new_adjacency_list[candidates[j]].includes(i)) {\n            new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i), 1);\n          }\n        }\n      }\n    } else if (this.state.conditions[i] == \"block\") {\n      new_conditions[i] = \"default\";\n      new_adjacency_list = this.updateGraph(i);\n    }\n\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n  }\n\n  updateGraph(i) {\n    var new_adjacency_list = this.state.adjacency_list;\n    var first_row = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    var last_row = [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399];\n    var first_col = [21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361];\n    var last_col = [40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380];\n\n    if (i == 1) {\n      new_adjacency_list[1] = [2, 21, 22];\n    } else if (i == 20) {\n      new_adjacency_list[20] = [19, 39, 40];\n    } else if (i == 381) {\n      new_adjacency_list[381] = [361, 362, 382];\n    } else if (i == 400) {\n      new_adjacency_list[400] = [379, 380, 399];\n    } else if (first_row.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i + 1, i + 20, i + 19, i + 21];\n    } else if (last_row.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i + 1, i - 20, i - 19, i - 21];\n    } else if (first_col.includes(i)) {\n      new_adjacency_list[i] = [i - 20, i + 20, i + 1, i - 19, i + 21];\n    } else if (last_col.includes(i)) {\n      new_adjacency_list[i] = [i - 1, i - 21, i + 20, i + 19, i - 20];\n    } else {\n      new_adjacency_list[i] = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n    }\n\n    for (let k = 0; k < new_adjacency_list[i].length; k++) {\n      var element_need_i = new_adjacency_list[i][k];\n      new_adjacency_list[element_need_i].push(i);\n    }\n\n    return new_adjacency_list;\n  }\n\n  changeTraverseCondition(i, new_status) {\n    var new_conditions = this.state.conditions;\n    var new_adjacency_list = this.state.adjacency_list;\n    var new_endpoints = this.state.endpoints;\n    new_conditions[i] = new_status;\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n  }\n\n  resetExceptEndPoints() {\n    console.log(this.state.endpoints);\n    var new_conditions = this.state.conditions;\n    var new_adjacency_list = this.state.adjacency_list;\n    var new_endpoints = this.state.endpoints;\n\n    for (let i = 1; i <= 400; i++) {\n      if (!new_endpoints.includes(i) && new_conditions[i] != \"block\") {\n        new_conditions[i] = \"default\";\n      } else if (new_endpoints.includes(i)) {\n        new_conditions[i] = \"endpoint\";\n      }\n    }\n\n    ;\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n  }\n\n  reset() {\n    var new_conditions = this.state.conditions;\n    var new_endpoints = [];\n    var new_adjacency_list = {};\n    var first_row = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    var last_row = [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399];\n    var first_col = [21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361];\n    var last_col = [40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380];\n\n    for (let i = 1; i <= 400; i++) {\n      if (i == 1) {\n        new_adjacency_list[1] = [2, 21, 22];\n      } else if (i == 20) {\n        new_adjacency_list[20] = [19, 39, 40];\n      } else if (i == 381) {\n        new_adjacency_list[381] = [361, 362, 382];\n      } else if (i == 400) {\n        new_adjacency_list[400] = [379, 380, 399];\n      } else if (first_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i + 20, i + 19, i + 21];\n      } else if (last_row.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 20, i - 19, i - 21];\n      } else if (first_col.includes(i)) {\n        new_adjacency_list[i] = [i - 20, i + 20, i + 1, i - 19, i + 21];\n      } else if (last_col.includes(i)) {\n        new_adjacency_list[i] = [i - 1, i - 21, i + 20, i + 19, i - 20];\n      } else {\n        new_adjacency_list[i] = [i - 1, i + 1, i - 19, i - 20, i - 21, i + 19, i + 20, i + 21];\n      }\n    }\n\n    ;\n\n    for (let i = 1; i <= 400; i++) {\n      new_conditions[i] = \"default\";\n    }\n\n    ;\n    this.setState(state => ({\n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list\n    }));\n  }\n\n  BFS() {\n    this.resetExceptEndPoints();\n\n    if (this.state.endpoints.length != 2) {\n      return;\n    }\n\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    var queue = [start_node];\n    var visited = {};\n    visited[start_node] = true;\n    var new_queue = [];\n    var parents = {};\n    var considering_intervals = setInterval(function () {\n      if (queue.length == 0 || target_node in visited) {\n        clearInterval(considering_intervals);\n\n        if (target_node in visited) {\n          var current_node = target_node;\n          var getting_path = setInterval(function () {\n            if (current_node == start_node) {\n              this.changeTraverseCondition(current_node, \"chosen\");\n              clearInterval(getting_path);\n              return;\n            }\n\n            this.changeTraverseCondition(current_node, \"chosen\");\n            current_node = parents[current_node];\n          }.bind(this), 300);\n        }\n\n        return;\n      }\n\n      new_queue = [];\n\n      for (let i = 0; i < queue.length; i++) {\n        for (let j = 0; j < graph[queue[i]].length; j++) {\n          if (!(graph[queue[i]][j] in visited)) {\n            parents[graph[queue[i]][j]] = queue[i];\n            new_queue.push(graph[queue[i]][j]);\n            visited[graph[queue[i]][j]] = true;\n          }\n        }\n      }\n\n      queue = new_queue;\n\n      for (let k = 0; k < queue.length; k++) {\n        if (this.state.conditions[queue[k]] != \"endpoint\") {\n          this.changeTraverseCondition(queue[k], \"considered\");\n        }\n      }\n    }.bind(this), 300);\n  }\n\n  dijkstra() {\n    this.resetExceptEndPoints();\n\n    if (this.state.endpoints.length != 2) {\n      return;\n    }\n\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    console.log(this.state.endpoints);\n    var distances = [1000];\n    var visited = {};\n    var parents = {};\n\n    for (let i = 1; i <= 400; i++) {\n      if (i == start_node) {\n        distances.push(0);\n      } else {\n        distances.push(1000);\n      }\n    }\n\n    var current_min_distance = 0;\n    var current_min_node = start_node;\n    var considering_nodes = setInterval(function () {\n      if (!this.state.endpoints.includes(current_min_node)) {\n        this.changeTraverseCondition(current_min_node, \"considered\");\n      }\n\n      console.log(this.state.conditions[current_min_node]);\n\n      if (target_node in visited || current_min_distance == 1000) {\n        clearInterval(considering_nodes);\n        var current_node = target_node;\n        var getting_path = setInterval(function () {\n          if (current_node == start_node) {\n            this.changeTraverseCondition(current_node, \"chosen\");\n            clearInterval(getting_path);\n            return;\n          }\n\n          this.changeTraverseCondition(current_node, \"chosen\");\n          current_node = parents[current_node];\n        }.bind(this), 300);\n        return;\n      }\n\n      var current_distances = {};\n\n      for (let j = 0; j < graph[current_min_node].length; j++) {\n        if (!(graph[current_min_node][j] in visited)) {\n          current_distances[graph[current_min_node][j]] = current_min_distance + 1;\n        }\n      }\n\n      Object.keys(current_distances).forEach(function (key) {\n        if (current_distances[key] < distances[key]) {\n          distances[key] = current_distances[key];\n          parents[key] = current_min_node;\n\n          if (!this.state.endpoints.includes(parseInt(key))) {\n            this.changeTraverseCondition(key, \"considered-d\");\n          }\n        }\n      }, this);\n      console.log(this.state.conditions[current_min_node]);\n      distances[current_min_node] = 1000;\n      visited[current_min_node] = true;\n      current_min_distance = Math.min.apply(Math, distances);\n      current_min_node = distances.indexOf(current_min_distance);\n    }.bind(this), 50);\n  }\n\n  renderElement(i) {\n    return /*#__PURE__*/_jsxDEV(Element, {\n      id: i,\n      condition: this.state.conditions[i],\n      changecond: () => this.changeInitialCondition(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderElements(start) {\n    var elements = [];\n\n    for (let i = 20 * (start - 1) + 1; i <= 20 * start; i++) {\n      elements.push(this.renderElement(i));\n    }\n\n    return elements;\n  }\n\n  renderBoard() {\n    var board = [];\n\n    for (let i = 1; i <= 20; i++) {\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        style: {\n          margin: '0'\n        },\n        children: [\" \", this.renderElements(i), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 18\n      }, this));\n    }\n\n    return board;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderBoard(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.BFS,\n        children: \" Breadth First Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.dijkstra,\n        children: \" Dijkstra's Algorithm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reset,\n        children: \" Reset map \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tungdo/pathfinder/src/App.js"],"names":["Component","lerp","a","b","u","fade","element","property","start","end","duration","interval","steps","step_u","theInterval","setInterval","clearInterval","r","Math","round","g","colorname","el","style","setProperty","Element","constructor","props","componentDidUpdate","prevProps","condition","current_element","document","getElementById","id","background","render","changecond","Graph","changeInitialCondition","bind","updateGraph","changeTraverseCondition","resetExceptEndPoints","reset","BFS","dijkstra","state","adjacency_list","endpoints","conditions","i","new_adjacency_list","first_row","last_row","first_col","last_col","includes","new_conditions","new_endpoints","push","splice","indexOf","candidates","j","length","setState","k","element_need_i","new_status","console","log","start_node","target_node","graph","queue","visited","new_queue","parents","considering_intervals","current_node","getting_path","distances","current_min_distance","current_min_node","considering_nodes","current_distances","Object","keys","forEach","key","parseInt","min","apply","renderElement","renderElements","elements","renderBoard","board","margin","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\n\nlerp = function(a, b, u) {\n  return (1 - u) * a + u * b;\n};\n\nfade = function(element, property, start, end, duration) {\n  var interval = 10;\n  var steps = duration / interval;\n  var step_u = 1.0 / steps;\n  var u = 0.0;\n  var theInterval = setInterval(function() {\n      if (u >= 1.0) {\n          clearInterval(theInterval);\n      }\n      var r = Math.round(lerp(start.r, end.r, u));\n      var g = Math.round(lerp(start.g, end.g, u));\n      var b = Math.round(lerp(start.b, end.b, u));\n      var colorname = 'rgb(' + r + ',' + g + ',' + b + ')';\n      el.style.setProperty(property, colorname);\n      u += step_u;\n  }, interval);\n};\n\nclass Element extends Component { \n  constructor(props) {\n    super(props);\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.condition != prevProps.condition) { \n      var current_element = document.getElementById(this.props.id);\n      if (this.props.condition == \"default\") { \n        current_element.style.background = '#FFFFFF';\n      }\n      else if (this.props.condition == \"block\") { \n        current_element.style.background = \"#000000\";\n      }\n      else if (this.props.condition == \"considered-d\") { \n        current_element.style.background = \"#FFB266\"\n      }\n      else if (this.props.condition == \"considered\") { \n        current_element.style.background = \"#FF8000\";\n      }\n      else if (this.props.condition == \"endpoint\") { \n        current_element.style.background = \"#33FFFF\";\n      }\n      else if (this.props.condition == \"chosen\") { \n        current_element.style.background = \"#00FF00\";\n      }\n    }; \n  };\n  render() { \n    return <button className=\"square\" id = {this.props.id} condition = {this.props.condition} onClick = {this.props.changecond}> {this.props.id} </button>;\n  };\n};\n\nclass Graph extends Component { \n  constructor(props) { \n    super(props); \n    this.changeInitialCondition = this.changeInitialCondition.bind(this);\n    this.updateGraph = this.updateGraph.bind(this);\n    this.changeTraverseCondition = this.changeTraverseCondition.bind(this);\n    this.resetExceptEndPoints = this.resetExceptEndPoints.bind(this); \n    this.reset = this.reset.bind(this); \n    this.BFS = this.BFS.bind(this);\n    this.dijkstra = this.dijkstra.bind(this);\n    this.state = { \n      adjacency_list: {},\n      endpoints:[], \n      conditions:{}, \n    };\n    for (let i = 1; i <= 400; i++) {\n      this.state.conditions[i] = \"default\"; \n    };\n    /* TODO: initialize adjacency_list */\n    var new_adjacency_list = {}\n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361]\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380]\n    for (let i = 1; i <= 400; i++) { \n      if (i == 1) { \n        new_adjacency_list[1] = [2,21, 22]\n      }\n      else if (i == 20) { \n        new_adjacency_list[20] = [19,39,40]\n      }\n      else if (i == 381) { \n        new_adjacency_list[381] = [361,362,382]\n      }\n      else if (i == 400) { \n        new_adjacency_list[400] = [379, 380, 399]\n      }\n      else if (first_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21]\n      }\n      else if (last_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21]\n      }\n      else if (first_col.includes(i)) { \n        new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21]\n      }\n      else if (last_col.includes(i)) { \n        new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20]\n      }\n      else { \n        new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      }\n    };\n    //this.state.adjacency_list = new_adjacency_list;\n    this.state.adjacency_list = new_adjacency_list\n  };\n\n  changeInitialCondition(i) { \n    var new_conditions = this.state.conditions;\n    var new_endpoints = this.state.endpoints;\n    var new_adjacency_list = this.state.adjacency_list; \n    if (this.state.conditions[i] == \"default\") { \n      new_conditions[i] = \"endpoint\"; \n      new_endpoints.push(i) \n    }\n    else if (this.state.conditions[i] == \"endpoint\") { \n      new_conditions[i] = \"block\"; \n      new_endpoints.splice(new_endpoints.indexOf(i), 1); \n      new_adjacency_list[i] = []\n      var candidates = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      for (var j=0; j < candidates.length; j++) { \n        if (candidates[j] in new_adjacency_list) { \n          if (new_adjacency_list[candidates[j]].includes(i)) { \n            new_adjacency_list[candidates[j]].splice(new_adjacency_list[candidates[j]].indexOf(i), 1); \n          }\n        }\n      }\n    }\n    else if (this.state.conditions[i] == \"block\") { \n      new_conditions[i] = \"default\"; \n      new_adjacency_list = this.updateGraph(i)\n    }\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }; \n\n  updateGraph(i) { \n    var new_adjacency_list = this.state.adjacency_list; \n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399];\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361];\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380];\n    if (i == 1) { \n      new_adjacency_list[1] = [2,21, 22];\n    }\n    else if (i == 20) { \n      new_adjacency_list[20] = [19,39,40];\n    }\n    else if (i == 381) { \n      new_adjacency_list[381] = [361,362,382];\n    }\n    else if (i == 400) { \n      new_adjacency_list[400] = [379, 380, 399];\n    }\n    else if (first_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21];\n    }\n    else if (last_row.includes(i)) { \n      new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21];\n    }\n    else if (first_col.includes(i)) { \n      new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21];\n    }\n    else if (last_col.includes(i)) { \n      new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20];\n    }\n    else { \n      new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21];\n    }\n    for (let k=0; k < new_adjacency_list[i].length; k++) { \n      var element_need_i = new_adjacency_list[i][k];\n      new_adjacency_list[element_need_i].push(i);\n    }\n    return new_adjacency_list; \n  };\n\n  changeTraverseCondition(i, new_status) { \n    var new_conditions = this.state.conditions; \n    var new_adjacency_list = this.state.adjacency_list; \n    var new_endpoints = this.state.endpoints\n    new_conditions[i] = new_status; \n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  resetExceptEndPoints() { \n    console.log(this.state.endpoints)\n    var new_conditions = this.state.conditions \n    var new_adjacency_list = this.state.adjacency_list\n    var new_endpoints = this.state.endpoints\n    for (let i = 1; i <= 400; i++) {\n      if (!(new_endpoints.includes(i)) && new_conditions[i] != \"block\") {\n        new_conditions[i] = \"default\";\n      } \n      else if (new_endpoints.includes(i)) { \n        new_conditions[i] = \"endpoint\"; \n      }\n    };\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  reset() { \n    var new_conditions = this.state.conditions \n    var new_endpoints = []\n    var new_adjacency_list = {}\n    var first_row = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]\n    var last_row = [382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]\n    var first_col = [21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361]\n    var last_col = [40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380]\n    for (let i = 1; i <= 400; i++) { \n      if (i == 1) { \n        new_adjacency_list[1] = [2,21, 22]\n      }\n      else if (i == 20) { \n        new_adjacency_list[20] = [19,39,40]\n      }\n      else if (i == 381) { \n        new_adjacency_list[381] = [361,362,382]\n      }\n      else if (i == 400) { \n        new_adjacency_list[400] = [379, 380, 399]\n      }\n      else if (first_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i+20, i+19, i+21]\n      }\n      else if (last_row.includes(i)) { \n        new_adjacency_list[i] = [i-1, i+1, i-20, i-19, i-21]\n      }\n      else if (first_col.includes(i)) { \n        new_adjacency_list[i] = [i-20, i+20, i+1, i-19, i+21]\n      }\n      else if (last_col.includes(i)) { \n        new_adjacency_list[i] = [i-1, i-21, i + 20, i + 19, i- 20]\n      }\n      else { \n        new_adjacency_list[i] = [i-1, i+1, i-19, i- 20, i- 21, i+ 19, i +20, i+21]\n      }\n    };\n    for (let i = 1; i <= 400; i++) {\n      new_conditions[i] = \"default\"; \n    };\n    this.setState(state => ({ \n      conditions: new_conditions,\n      endpoints: new_endpoints,\n      adjacency_list: new_adjacency_list, \n    })); \n  }\n\n  BFS() { \n    this.resetExceptEndPoints(); \n    if (this.state.endpoints.length != 2) { \n      return \n    }\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    var queue = [start_node]; \n    var visited = {};\n    visited[start_node] = true; \n    var new_queue = [];\n    var parents = {};\n    var considering_intervals = setInterval(function(){\n        if (queue.length == 0 || target_node in visited) { \n          clearInterval(considering_intervals);\n          if (target_node in visited) { \n            var current_node = target_node; \n            var getting_path = setInterval(function() { \n              if (current_node == start_node) { \n                this.changeTraverseCondition(current_node, \"chosen\");\n                clearInterval(getting_path); \n                return \n              }\n              this.changeTraverseCondition(current_node, \"chosen\");\n              current_node = parents[current_node]; \n            }.bind(this), 300)\n          }\n          return \n        }\n        new_queue = [];  \n        for (let i = 0; i < queue.length; i++) { \n            for (let j = 0; j < graph[queue[i]].length; j++) { \n                if (!(graph[queue[i]][j] in visited)) { \n                    parents[graph[queue[i]][j]] = queue[i];\n                    new_queue.push(graph[queue[i]][j]);\n                    visited[graph[queue[i]][j]] = true;\n                }\n            }\n        }\n        queue = new_queue; \n        for (let k = 0; k < queue.length; k++) { \n            if (this.state.conditions[queue[k]] != \"endpoint\") { \n            this.changeTraverseCondition(queue[k], \"considered\");\n            }\n          }\n        }.bind(this), 300)\n  }\n\n  dijkstra() { \n    this.resetExceptEndPoints(); \n    if (this.state.endpoints.length != 2) { \n      return \n    }\n    var start_node = this.state.endpoints[0];\n    var target_node = this.state.endpoints[1];\n    var graph = this.state.adjacency_list;\n    console.log(this.state.endpoints)\n    var distances = [1000]\n    var visited = {}\n    var parents = {}\n    for (let i=1; i <= 400;i++) { \n        if (i == start_node) { \n            distances.push(0)\n        }\n        else { \n            distances.push(1000)\n        }\n    } \n    var current_min_distance = 0 \n    var current_min_node = start_node\n    var considering_nodes = setInterval(function() { \n        if (!(this.state.endpoints.includes(current_min_node))) { \n          this.changeTraverseCondition(current_min_node, \"considered\")\n        }\n        console.log(this.state.conditions[current_min_node])\n        if ((target_node in visited) || current_min_distance == 1000) { \n            clearInterval(considering_nodes); \n            var current_node = target_node; \n            var getting_path = setInterval(function() { \n              if (current_node == start_node) { \n                this.changeTraverseCondition(current_node, \"chosen\");\n                clearInterval(getting_path); \n                return \n              }\n              this.changeTraverseCondition(current_node, \"chosen\");\n              current_node = parents[current_node]; \n            }.bind(this), 300)\n            return \n        }\n        var current_distances = {}\n        for (let j=0; j < graph[current_min_node].length; j++) { \n            if (!(graph[current_min_node][j] in visited)) { \n            current_distances[graph[current_min_node][j]] = current_min_distance + 1 \n        }\n        }\n        Object.keys(current_distances).forEach(function(key) { \n            if (current_distances[key] < distances[key]) { \n                distances[key] = current_distances[key]\n                parents[key] = current_min_node\n                if (!(this.state.endpoints.includes(parseInt(key)))) { \n                  this.changeTraverseCondition(key, \"considered-d\")\n                }\n            }\n        }, this)\n        console.log(this.state.conditions[current_min_node])\n        distances[current_min_node] = 1000\n        visited[current_min_node] = true\n        current_min_distance = Math.min.apply(Math, distances);\n        current_min_node = distances.indexOf(current_min_distance);\n\n    }.bind(this), 50)\n  };\n\n  renderElement(i) { \n    return <Element id={i} condition={this.state.conditions[i]} changecond={() => this.changeInitialCondition(i)}/>\n  }\n\n  renderElements(start) { \n    var elements = []; \n    for (let i = 20*(start-1) + 1; i <= 20*start; i++) { \n      elements.push(this.renderElement(i)); \n    }\n    return elements\n  }\n\n  renderBoard() { \n    var board = []; \n    for (let i = 1; i <= 20; i++) { \n      board.push(<div className = \"board-row\" style= {{margin: '0'}}> {this.renderElements(i)}  </div>); \n    }\n    return board\n  }\n\n  render() { \n    return (\n      <div> \n      {this.renderBoard()}\n      <button onClick = {this.BFS}> Breadth First Search </button>\n      <button onClick = {this.dijkstra}> Dijkstra's Algorithm </button>\n      <button onClick = {this.reset}> Reset map </button>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Graph/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}