(this.webpackJsonppathfinder=this.webpackJsonppathfinder||[]).push([[0],{59:function(t,e,n){},60:function(t,e,n){},68:function(t,e,n){"use strict";n.r(e);var i=n(0),a=n.n(i),s=n(18),r=n.n(s),o=(n(59),n(30)),c=n(31),d=n(9),l=n(33),h=n(32),u=(n.p,n(60),n(76)),p=n(53),j=n(77),b=n(74),g=n(78),f=n(75),v=(n(61),n.p+"static/media/pic1.6a988925.png"),m=n.p+"static/media/pic2.5c986050.png",O=n.p+"static/media/pic4.f20d2566.png",x=n.p+"static/media/pic5.9c12f257.png",y=n.p+"static/media/pic6.706839af.png",k=n.p+"static/media/pic7.db9632b4.png",C=n(1),w={content:{top:"50%",left:"50%",right:"auto",bottom:"auto",marginRight:"-50%",transform:"translate(-50%, -50%)"}},F=function(t){Object(l.a)(n,t);var e=Object(h.a)(n);function n(t){var i;return Object(o.a)(this,n),(i=e.call(this,t)).state={tutorialOn:!0},i.handleClose=i.handleClose.bind(Object(d.a)(i)),i}return Object(c.a)(n,[{key:"componentDidUpdate",value:function(t){this.props.showTutorial!=t.showTutorial&&this.setState((function(t){return{tutorialOn:!0}}))}},{key:"handleClose",value:function(){this.setState((function(t){return{tutorialOn:!1}}))}},{key:"render",value:function(){return console.log(this.props.show),Object(C.jsx)("div",{children:Object(C.jsxs)(u.a,{show:this.state.tutorialOn,style:w,onHide:this.handleClose,children:[Object(C.jsx)(u.a.Header,{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:Object(C.jsx)(u.a.Title,{children:"Tutorial"})}),Object(C.jsxs)(u.a.Body,{children:[Object(C.jsx)("p",{children:" For a quick start, click on two grids. "}),Object(C.jsx)("img",{src:v,alt:"two grids",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:' Then, click on "Run Pathfinding Algorithms" and choose an algorithm you want to find the shortest path with'}),Object(C.jsx)("img",{src:m,alt:"run pathfinding algorithms",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:" Now you can see how the algorithms find the shortest path between two grids! "}),Object(C.jsx)("img",{src:O,alt:"shortest path",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:" Click twice on a grid to make it an obstacle. "}),Object(C.jsx)("img",{src:x,alt:"obstacle",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:' You can also choose to quickly build a maze, aka placing obstacles "smartly", from one of the maze generation algorithms by clicking on "Generate Maze" and choose one algorithm. '}),Object(C.jsx)("img",{src:y,alt:"maze",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:" Now you can watch how our algorithm builds a maze! You can put two start/end grids on this new maze and run the pathfinding algorithm as well! "}),Object(C.jsx)("img",{src:k,alt:"maze-run",style:{width:"400px",height:"200px"}}),Object(C.jsx)("p",{children:' Finally, to reset our board, click on "Reset board" on the nagivation bar. '}),Object(C.jsx)("p",{children:" Enjoy pathfinding! "})]}),Object(C.jsx)(u.a.Footer,{style:{display:"flex",justifyContent:"center"},children:Object(C.jsx)(p.a,{variant:"primary",style:{width:"70px",height:"50px"},onClick:this.handleClose,children:"Close"})})]})})}}]),n}(i.Component),M=function(t){Object(l.a)(n,t);var e=Object(h.a)(n);function n(t){return Object(o.a)(this,n),e.call(this,t)}return Object(c.a)(n,[{key:"componentDidUpdate",value:function(t){if(this.props.condition!=t.condition){var e=document.getElementById(this.props.id);"default"==this.props.condition?e.style.background="#FFFFFF":"block"==this.props.condition?e.style.background="#000000":"considered-d"==this.props.condition?e.style.background="#FFB266":"considered"==this.props.condition?e.style.background="#FF8000":"endpoint"==this.props.condition?e.style.background="#FF99FF":"chosen"==this.props.condition&&(e.style.background="#80FF00")}}},{key:"render",value:function(){return Object(C.jsx)("button",{className:"square",id:this.props.id,condition:this.props.condition,onClick:this.props.changecond,children:"  "})}}]),n}(i.Component),z=function(t){Object(l.a)(n,t);var e=Object(h.a)(n);function n(t){var i;Object(o.a)(this,n),(i=e.call(this,t)).changeInitialCondition=i.changeInitialCondition.bind(Object(d.a)(i)),i.addNodeToGraph=i.addNodeToGraph.bind(Object(d.a)(i)),i.changeTraverseCondition=i.changeTraverseCondition.bind(Object(d.a)(i)),i.resetExceptEndPoints=i.resetExceptEndPoints.bind(Object(d.a)(i)),i.reset=i.reset.bind(Object(d.a)(i)),i.resetHelper=i.resetHelper.bind(Object(d.a)(i)),i.BFS=i.BFS.bind(Object(d.a)(i)),i.dijkstra=i.dijkstra.bind(Object(d.a)(i)),i.notVertical=i.notVertical.bind(Object(d.a)(i)),i.findCoordinates=i.findCoordinates.bind(Object(d.a)(i)),i.findDistance=i.findDistance.bind(Object(d.a)(i)),i.deleteNodeFromGraph=i.deleteNodeFromGraph.bind(Object(d.a)(i)),i.generateMazePrimHelper=i.generateMazePrimHelper.bind(Object(d.a)(i)),i.generateMazeRandomHelper=i.generateMazeRandomHelper.bind(Object(d.a)(i)),i.generateMazeRandom=i.generateMazeRandom.bind(Object(d.a)(i)),i.generateMazePrim=i.generateMazePrim.bind(Object(d.a)(i)),i.restoreEndpoints=i.restoreEndpoints.bind(Object(d.a)(i)),i.showTutorial=i.showTutorial.bind(Object(d.a)(i)),i.state={adjacency_list:{},endpoints:[],conditions:{},tutorialIsOpen:!1};for(var a=1;a<=400;a++)i.state.conditions[a]="default";for(var s={},r=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],c=[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],l=[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361],h=[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380],u=1;u<=400;u++)1==u?s[1]=[2,21,22]:20==u?s[20]=[19,39,40]:381==u?s[381]=[361,362,382]:400==u?s[400]=[379,380,399]:r.includes(u)?s[u]=[u-1,u+1,u+20,u+19,u+21]:c.includes(u)?s[u]=[u-1,u+1,u-20,u-19,u-21]:l.includes(u)?s[u]=[u-20,u+20,u+1,u-19,u+21]:h.includes(u)?s[u]=[u-1,u-21,u+20,u+19,u-20]:s[u]=[u-1,u+1,u-19,u-20,u-21,u+19,u+20,u+21];return i.state.adjacency_list=s,i}return Object(c.a)(n,[{key:"showTutorial",value:function(){this.setState({tutorialIsOpen:!this.state.tutorialIsOpen})}},{key:"notVertical",value:function(t,e){return![t-1,t+1,t-20,t+20].includes(e)}},{key:"findCoordinates",value:function(t){return[t%20,Math.floor(t/20)+1]}},{key:"findDistance",value:function(t,e){var n=this.findCoordinates(t),i=this.findCoordinates(e);return Math.sqrt(Math.pow(n[0]-i[0],2)+Math.pow(n[1]-i[2],2))}},{key:"changeInitialCondition",value:function(t){var e=this.state.conditions,n=this.state.endpoints,i=this.state.adjacency_list;"default"==this.state.conditions[t]?(e[t]="endpoint",n.push(t)):"endpoint"==this.state.conditions[t]?(e[t]="block",n.splice(n.indexOf(t),1),i=this.deleteNodeFromGraph(t)):"block"==this.state.conditions[t]&&(e[t]="default",i=this.addNodeToGraph(t)),this.setState((function(t){return{conditions:e,endpoints:n,adjacency_list:i}}))}},{key:"deleteNodeFromGraph",value:function(t){var e=this.state.adjacency_list;e[t]=[];for(var n=[t-1,t+1,t-19,t-20,t-21,t+19,t+20,t+21],i=0;i<n.length;i++)n[i]in e&&e[n[i]].includes(t)&&e[n[i]].splice(e[n[i]].indexOf(t),1);return e}},{key:"addNodeToGraph",value:function(t){var e=this.state.adjacency_list;1==t?e[1]=[2,21,22]:20==t?e[20]=[19,39,40]:381==t?e[381]=[361,362,382]:400==t?e[400]=[379,380,399]:[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19].includes(t)?e[t]=[t-1,t+1,t+20,t+19,t+21]:[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399].includes(t)?e[t]=[t-1,t+1,t-20,t-19,t-21]:[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361].includes(t)?e[t]=[t-20,t+20,t+1,t-19,t+21]:[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380].includes(t)?e[t]=[t-1,t-21,t+20,t+19,t-20]:e[t]=[t-1,t+1,t-19,t-20,t-21,t+19,t+20,t+21];for(var n=0;n<e[t].length;n++){e[e[t][n]].push(t)}return e}},{key:"changeTraverseCondition",value:function(t,e){var n=this.state.conditions,i=this.state.adjacency_list,a=this.state.endpoints;n[t]=e,this.setState((function(t){return{conditions:n,endpoints:a,adjacency_list:i}}))}},{key:"resetExceptEndPoints",value:function(){for(var t=this.state.conditions,e=this.state.adjacency_list,n=this.state.endpoints,i=1;i<=400;i++)n.includes(i)||"block"==t[i]?n.includes(i)&&(t[i]="endpoint"):t[i]="default";this.setState((function(i){return{conditions:t,endpoints:n,adjacency_list:e}}))}},{key:"restoreEndpoints",value:function(){for(var t=this.state.conditions,e=0;e<this.state.endpoints.length;e++)t[this.state.endpoints[e]]="endpoint";this.setState((function(e){return{conditions:t}}))}},{key:"resetHelper",value:function(){for(var t=[],e={},n=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],i=[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],a=[21,41,61,81,101,121,141,161,181,201,221,241,261,281,301,321,341,361],s=[40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380],r=1;r<=400;r++)1==r?e[1]=[2,21,22]:20==r?e[20]=[19,39,40]:381==r?e[381]=[361,362,382]:400==r?e[400]=[379,380,399]:n.includes(r)?e[r]=[r-1,r+1,r+20,r+19,r+21]:i.includes(r)?e[r]=[r-1,r+1,r-20,r-19,r-21]:a.includes(r)?e[r]=[r-20,r+20,r+1,r-19,r+21]:s.includes(r)?e[r]=[r-1,r-21,r+20,r+19,r-20]:e[r]=[r-1,r+1,r-19,r-20,r-21,r+19,r+20,r+21];for(var o=1;o<=400;o++)t[o]="default";return[t,[],e]}},{key:"reset",value:function(){var t=this;this.setState((function(e){return{conditions:t.resetHelper()[0],endpoints:t.resetHelper()[1],adjacency_list:t.resetHelper()[2]}}))}},{key:"generateMazeRandom",value:function(){var t=this;this.setState((function(e){return{conditions:t.resetHelper()[0],endpoints:t.resetHelper()[1],adjacency_list:t.resetHelper()[2]}}),this.generateMazeRandomHelper)}},{key:"generateMazePrim",value:function(){var t=this;this.setState((function(e){return{conditions:t.resetHelper()[0],endpoints:t.resetHelper()[1],adjacency_list:t.resetHelper()[2]}}),this.generateMazePrimHelper)}},{key:"generateMazeRandomHelper",value:function(){for(var t=[],e=this.state.conditions,n=Math.floor(50*Math.random()+50),i=0;i<n;i++){for(var a=Math.floor(400*Math.random()+1);"default"!=e[a];)a=Math.floor(400*Math.random()+1);e[a]="block",t.push(a)}this.setState((function(t){return{conditions:e}}));for(var s=0;s<t.length;s++)this.setState({adjacency_list:this.deleteNodeFromGraph(t[s])})}},{key:"generateMazePrimHelper",value:function(){for(var t=this.state.conditions,e=this.state.adjacency_list,n={},i=[],a=1;a<=400;a++)t[a]="block";var s=Math.floor(400*Math.random()+1);t[s]="default",n[1]=!0;for(var r=0;r<e[1].length;r++)i.push(e[1][r]);var o=setInterval(function(){var a=this;if(0!=i.length){var s=i[Math.floor(Math.random()*i.length)];console.log(s);for(var r=e[s],c=0,d=0;d<r.length;d++)r[d]in n&&(c+=1);if(c<2){n[s]=!0,t[s]="default";for(var l=0;l<e[s].length;l++)e[s][l]in n||i.push(e[s][l])}i.splice(i.indexOf(s),1),this.setState((function(e){return{conditions:t}}))}else{console.log("here"),clearInterval(o);for(var h=function(t){t in n||a.setState((function(e){return{adjacency_list:a.deleteNodeFromGraph(t)}}))},u=1;u<=400;u++)h(u)}}.bind(this),.001)}},{key:"BFS",value:function(){if(this.resetExceptEndPoints(),2==this.state.endpoints.length){var t=this.state.endpoints[0],e=this.state.endpoints[1],n=this.state.adjacency_list,i=[t],a={};a[t]=!0;var s=[],r={},o=setInterval(function(){if(0==i.length||e in a){if(clearInterval(o),e in a)var c=e,d=setInterval(function(){if(c==t)return this.changeTraverseCondition(c,"chosen"),clearInterval(d),void this.restoreEndpoints();this.changeTraverseCondition(c,"chosen"),c=r[c]}.bind(this),300)}else{s=[];for(var l=0;l<i.length;l++)for(var h=0;h<n[i[l]].length;h++)n[i[l]][h]in a||(r[n[i[l]][h]]=i[l],s.push(n[i[l]][h]),a[n[i[l]][h]]=!0);i=s;for(var u=0;u<i.length;u++)"endpoint"!=this.state.conditions[i[u]]&&this.changeTraverseCondition(i[u],"considered")}}.bind(this),400)}}},{key:"dijkstra",value:function(){if(this.resetExceptEndPoints(),2==this.state.endpoints.length){for(var t=this.state.endpoints[0],e=this.state.endpoints[1],n=this.state.adjacency_list,i=[1e3],a={},s={},r=1;r<=400;r++)r==t?i.push(0):i.push(1e3);var o=0,c=t,d=setInterval(function(){if(this.state.endpoints.includes(c)||this.changeTraverseCondition(c,"considered"),e in a||1e3==o){clearInterval(d);var r=e,l=setInterval(function(){if(r==t)return this.changeTraverseCondition(r,"chosen"),this.restoreEndpoints(),void clearInterval(l);this.changeTraverseCondition(r,"chosen"),r=s[r]}.bind(this),300)}else{for(var h={},u=0;u<n[c].length;u++)n[c][u]in a||(this.notVertical(c,n[c][u])?h[n[c][u]]=o+1.4:h[n[c][u]]=o+1);Object.keys(h).forEach((function(t){h[t]<i[t]&&(i[t]=h[t],s[t]=c,this.state.endpoints.includes(parseInt(t))||this.changeTraverseCondition(t,"considered-d"))}),this),i[c]=1e3,a[c]=!0,o=Math.min.apply(Math,i),c=i.indexOf(o)}}.bind(this),40)}}},{key:"renderElement",value:function(t){var e=this;return Object(C.jsx)(M,{id:t,condition:this.state.conditions[t],changecond:function(){return e.changeInitialCondition(t)}})}},{key:"renderElements",value:function(t){for(var e=[],n=20*(t-1)+1;n<=20*t;n++)e.push(this.renderElement(n));return e}},{key:"renderBoard",value:function(){for(var t=[],e=1;e<=20;e++)t.push(Object(C.jsxs)("div",{className:"board-row",style:{marginLeft:"400px"},children:[" ",this.renderElements(e),"  "]}));return t}},{key:"render",value:function(){return Object(C.jsxs)("div",{children:[Object(C.jsx)(j.a,{sticky:"top",bg:"dark",variant:"dark",style:{marginBottom:"15px"},children:Object(C.jsxs)(b.a,{children:[Object(C.jsx)(j.a.Brand,{children:" Pathfinding Visualizer"}),Object(C.jsxs)(g.a,{className:"me-auto",children:[Object(C.jsx)(g.a.Link,{onClick:this.showTutorial,children:" Tutorial "}),Object(C.jsxs)(f.a,{title:"Run Pathfinding Algorithms",id:"basic-nav-dropdown",children:[Object(C.jsx)(f.a.Item,{onClick:this.BFS,children:"Breadth First Search"}),Object(C.jsx)(f.a.Item,{onClick:this.dijkstra,children:" Dijkstra's Algorithm"})]}),Object(C.jsxs)(f.a,{title:"Generate Maze",id:"basic-nav-dropdown",children:[Object(C.jsx)(f.a.Item,{onClick:this.generateMazePrim,children:" Randomized Prim's Algorithm"}),Object(C.jsx)(f.a.Item,{onClick:this.generateMazeRandom,children:" Just a random maze"})]}),Object(C.jsx)(g.a.Link,{onClick:this.reset,children:" Reset Board "})]})]})}),Object(C.jsxs)("div",{style:{marginBottom:"10px"},children:[Object(C.jsx)("div",{style:{marginLeft:"auto",marginRight:"auto",width:"700px"},children:" Click on a grid to make it a start/end grid. We need two grids to run path finding algorithms. "}),Object(C.jsx)("div",{style:{marginLeft:"auto",marginRight:"auto",width:"500px"},children:" Click twice on a grid to make it an obstacle. "}),Object(C.jsx)("div",{style:{marginLeft:"auto",marginRight:"auto",width:"500px"},children:" Click three times on a grid to reset it to the original grid. "})]}),Object(C.jsxs)("div",{style:{marginLeft:"auto",marginRight:"auto",width:"1000px",marginBottom:"15px"},children:[Object(C.jsx)("button",{style:{background:"#FF99FF"},children:" "})," ",Object(C.jsx)("span",{class:"legend",children:" Start/end grid"}),Object(C.jsx)("button",{style:{background:"#000000"},children:" "})," ",Object(C.jsx)("span",{class:"legend",children:" Obstacle grid"}),Object(C.jsx)("button",{style:{background:"#FF8000"},children:" "})," ",Object(C.jsx)("span",{class:"legend",children:" Explored grid"}),Object(C.jsx)("button",{style:{background:"#FFB266"},children:" "})," ",Object(C.jsx)("span",{class:"legend",children:" Soon-to-be-explored grid"}),Object(C.jsx)("button",{style:{background:"#80FF00"},children:" "})," ",Object(C.jsx)("span",{class:"legend",children:" Shortest-path grid"})]}),Object(C.jsx)(F,{showTutorial:this.state.tutorialIsOpen}),this.renderBoard()]})}}]),n}(i.Component);var I=function(){return Object(C.jsx)("div",{className:"App",children:Object(C.jsx)(z,{})})},T=function(t){t&&t instanceof Function&&n.e(3).then(n.bind(null,79)).then((function(e){var n=e.getCLS,i=e.getFID,a=e.getFCP,s=e.getLCP,r=e.getTTFB;n(t),i(t),a(t),s(t),r(t)}))};r.a.render(Object(C.jsx)(a.a.StrictMode,{children:Object(C.jsx)(I,{})}),document.getElementById("root")),T()}},[[68,1,2]]]);
//# sourceMappingURL=main.fa7c9270.chunk.js.map